Search.setIndex({"docnames": ["api/generated/pywr.core.Scenario", "api/generated/pywr.core.ScenarioCollection", "api/generated/pywr.core.ScenarioIndex", "api/generated/pywr.core.Timestep", "api/generated/pywr.domains.river.Catchment", "api/generated/pywr.domains.river.Reservoir", "api/generated/pywr.domains.river.River", "api/generated/pywr.domains.river.RiverGauge", "api/generated/pywr.domains.river.RiverSplit", "api/generated/pywr.domains.river.RiverSplitWithGauge", "api/generated/pywr.nodes.AggregatedNode", "api/generated/pywr.nodes.AggregatedStorage", "api/generated/pywr.nodes.AnnualVirtualStorage", "api/generated/pywr.nodes.BreakLink", "api/generated/pywr.nodes.DelayNode", "api/generated/pywr.nodes.Input", "api/generated/pywr.nodes.Link", "api/generated/pywr.nodes.LossLink", "api/generated/pywr.nodes.MonthlyVirtualStorage", "api/generated/pywr.nodes.MultiSplitLink", "api/generated/pywr.nodes.Node", "api/generated/pywr.nodes.Output", "api/generated/pywr.nodes.PiecewiseLink", "api/generated/pywr.nodes.RollingVirtualStorage", "api/generated/pywr.nodes.SeasonalVirtualStorage", "api/generated/pywr.nodes.Storage", "api/generated/pywr.nodes.VirtualStorage", "api/generated/pywr.parameters.AbstractThresholdParameter", "api/generated/pywr.parameters.AggregatedIndexParameter", "api/generated/pywr.parameters.AggregatedParameter", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter", "api/generated/pywr.parameters.ArrayIndexedParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter", "api/generated/pywr.parameters.BinaryStepParameter", "api/generated/pywr.parameters.ConstantParameter", "api/generated/pywr.parameters.ConstantScenarioIndexParameter", "api/generated/pywr.parameters.ConstantScenarioParameter", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter", "api/generated/pywr.parameters.CurrentYearThresholdParameter", "api/generated/pywr.parameters.DailyProfileParameter", "api/generated/pywr.parameters.DataFrameParameter", "api/generated/pywr.parameters.DeficitParameter", "api/generated/pywr.parameters.DiscountFactorParameter", "api/generated/pywr.parameters.DivisionParameter", "api/generated/pywr.parameters.FlowDelayParameter", "api/generated/pywr.parameters.FlowParameter", "api/generated/pywr.parameters.HydropowerTargetParameter", "api/generated/pywr.parameters.IndexParameter", "api/generated/pywr.parameters.IndexedArrayParameter", "api/generated/pywr.parameters.InterpolatedFlowParameter", "api/generated/pywr.parameters.InterpolatedParameter", "api/generated/pywr.parameters.InterpolatedQuadratureParameter", "api/generated/pywr.parameters.InterpolatedVolumeParameter", "api/generated/pywr.parameters.LogisticParameter", "api/generated/pywr.parameters.MaxParameter", "api/generated/pywr.parameters.MinParameter", "api/generated/pywr.parameters.MonthlyProfileParameter", "api/generated/pywr.parameters.MultipleThresholdIndexParameter", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter", "api/generated/pywr.parameters.NegativeMaxParameter", "api/generated/pywr.parameters.NegativeMinParameter", "api/generated/pywr.parameters.NegativeParameter", "api/generated/pywr.parameters.NodeThresholdParameter", "api/generated/pywr.parameters.OffsetParameter", "api/generated/pywr.parameters.Parameter", "api/generated/pywr.parameters.ParameterThresholdParameter", "api/generated/pywr.parameters.PiecewiseIntegralParameter", "api/generated/pywr.parameters.RbfProfileParameter", "api/generated/pywr.parameters.RecorderThresholdParameter", "api/generated/pywr.parameters.RectifierParameter", "api/generated/pywr.parameters.ScenarioDailyProfileParameter", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter", "api/generated/pywr.parameters.ScenarioWrapperParameter", "api/generated/pywr.parameters.StorageParameter", "api/generated/pywr.parameters.StorageThresholdParameter", "api/generated/pywr.parameters.TablesArrayParameter", "api/generated/pywr.parameters.UniformDrawdownProfileParameter", "api/generated/pywr.parameters.WeeklyProfileParameter", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "api/generated/pywr.parameters.control_curves.ControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "api/generated/pywr.recorders.AggregatedRecorder", "api/generated/pywr.recorders.Aggregator", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder", "api/generated/pywr.recorders.AnnualTotalFlowRecorder", "api/generated/pywr.recorders.CSVRecorder", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder", "api/generated/pywr.recorders.FlowDurationCurveRecorder", "api/generated/pywr.recorders.GaussianKDEStorageRecorder", "api/generated/pywr.recorders.HydropowerRecorder", "api/generated/pywr.recorders.IndexParameterRecorder", "api/generated/pywr.recorders.MeanFlowNodeRecorder", "api/generated/pywr.recorders.MeanParameterRecorder", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder", "api/generated/pywr.recorders.NodeRecorder", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder", "api/generated/pywr.recorders.NumpyArrayAreaRecorder", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder", "api/generated/pywr.recorders.NumpyArrayLevelRecorder", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder", "api/generated/pywr.recorders.NumpyArrayNodeRecorder", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "api/generated/pywr.recorders.NumpyArrayParameterRecorder", "api/generated/pywr.recorders.NumpyArrayStorageRecorder", "api/generated/pywr.recorders.ParameterRecorder", "api/generated/pywr.recorders.Recorder", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder", "api/generated/pywr.recorders.RollingWindowParameterRecorder", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder", "api/generated/pywr.recorders.StorageDurationCurveRecorder", "api/generated/pywr.recorders.StorageRecorder", "api/generated/pywr.recorders.TablesRecorder", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder", "api/generated/pywr.recorders.TotalDeficitNodeRecorder", "api/generated/pywr.recorders.TotalFlowNodeRecorder", "api/generated/pywr.recorders.TotalHydroEnergyRecorder", "api/generated/pywr.recorders.TotalParameterRecorder", "api/pywr", "api/pywr.core", "api/pywr.nodes", "api/pywr.notebook", "api/pywr.optimisation", "api/pywr.parameters", "api/pywr.recorders", "api/pywr.solvers", "api/pywr.utils", "cookbook/aggregated_node", "cookbook/aggregated_parameter", "cookbook/control_curves", "cookbook/cookbook", "cookbook/dataframes", "cookbook/demand_saving", "err_perf", "extending_pywr/extending_pywr_nodes", "extending_pywr/extending_pywr_parameters", "extending_pywr/extending_pywr_recorders", "extending_pywr/index", "formulation", "index", "install", "json", "license", "tutorial"], "filenames": ["api/generated/pywr.core.Scenario.rst", "api/generated/pywr.core.ScenarioCollection.rst", "api/generated/pywr.core.ScenarioIndex.rst", "api/generated/pywr.core.Timestep.rst", "api/generated/pywr.domains.river.Catchment.rst", "api/generated/pywr.domains.river.Reservoir.rst", "api/generated/pywr.domains.river.River.rst", "api/generated/pywr.domains.river.RiverGauge.rst", "api/generated/pywr.domains.river.RiverSplit.rst", "api/generated/pywr.domains.river.RiverSplitWithGauge.rst", "api/generated/pywr.nodes.AggregatedNode.rst", "api/generated/pywr.nodes.AggregatedStorage.rst", "api/generated/pywr.nodes.AnnualVirtualStorage.rst", "api/generated/pywr.nodes.BreakLink.rst", "api/generated/pywr.nodes.DelayNode.rst", "api/generated/pywr.nodes.Input.rst", "api/generated/pywr.nodes.Link.rst", "api/generated/pywr.nodes.LossLink.rst", "api/generated/pywr.nodes.MonthlyVirtualStorage.rst", "api/generated/pywr.nodes.MultiSplitLink.rst", "api/generated/pywr.nodes.Node.rst", "api/generated/pywr.nodes.Output.rst", "api/generated/pywr.nodes.PiecewiseLink.rst", "api/generated/pywr.nodes.RollingVirtualStorage.rst", "api/generated/pywr.nodes.SeasonalVirtualStorage.rst", "api/generated/pywr.nodes.Storage.rst", "api/generated/pywr.nodes.VirtualStorage.rst", "api/generated/pywr.parameters.AbstractThresholdParameter.rst", "api/generated/pywr.parameters.AggregatedIndexParameter.rst", "api/generated/pywr.parameters.AggregatedParameter.rst", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter.rst", "api/generated/pywr.parameters.ArrayIndexedParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter.rst", "api/generated/pywr.parameters.BinaryStepParameter.rst", "api/generated/pywr.parameters.ConstantParameter.rst", "api/generated/pywr.parameters.ConstantScenarioIndexParameter.rst", "api/generated/pywr.parameters.ConstantScenarioParameter.rst", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter.rst", "api/generated/pywr.parameters.CurrentYearThresholdParameter.rst", "api/generated/pywr.parameters.DailyProfileParameter.rst", "api/generated/pywr.parameters.DataFrameParameter.rst", "api/generated/pywr.parameters.DeficitParameter.rst", "api/generated/pywr.parameters.DiscountFactorParameter.rst", "api/generated/pywr.parameters.DivisionParameter.rst", "api/generated/pywr.parameters.FlowDelayParameter.rst", "api/generated/pywr.parameters.FlowParameter.rst", "api/generated/pywr.parameters.HydropowerTargetParameter.rst", "api/generated/pywr.parameters.IndexParameter.rst", "api/generated/pywr.parameters.IndexedArrayParameter.rst", "api/generated/pywr.parameters.InterpolatedFlowParameter.rst", "api/generated/pywr.parameters.InterpolatedParameter.rst", "api/generated/pywr.parameters.InterpolatedQuadratureParameter.rst", "api/generated/pywr.parameters.InterpolatedVolumeParameter.rst", "api/generated/pywr.parameters.LogisticParameter.rst", "api/generated/pywr.parameters.MaxParameter.rst", "api/generated/pywr.parameters.MinParameter.rst", "api/generated/pywr.parameters.MonthlyProfileParameter.rst", "api/generated/pywr.parameters.MultipleThresholdIndexParameter.rst", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter.rst", "api/generated/pywr.parameters.NegativeMaxParameter.rst", "api/generated/pywr.parameters.NegativeMinParameter.rst", "api/generated/pywr.parameters.NegativeParameter.rst", "api/generated/pywr.parameters.NodeThresholdParameter.rst", "api/generated/pywr.parameters.OffsetParameter.rst", "api/generated/pywr.parameters.Parameter.rst", "api/generated/pywr.parameters.ParameterThresholdParameter.rst", "api/generated/pywr.parameters.PiecewiseIntegralParameter.rst", "api/generated/pywr.parameters.RbfProfileParameter.rst", "api/generated/pywr.parameters.RecorderThresholdParameter.rst", "api/generated/pywr.parameters.RectifierParameter.rst", "api/generated/pywr.parameters.ScenarioDailyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWrapperParameter.rst", "api/generated/pywr.parameters.StorageParameter.rst", "api/generated/pywr.parameters.StorageThresholdParameter.rst", "api/generated/pywr.parameters.TablesArrayParameter.rst", "api/generated/pywr.parameters.UniformDrawdownProfileParameter.rst", "api/generated/pywr.parameters.WeeklyProfileParameter.rst", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.rst", "api/generated/pywr.recorders.AggregatedRecorder.rst", "api/generated/pywr.recorders.Aggregator.rst", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder.rst", "api/generated/pywr.recorders.AnnualTotalFlowRecorder.rst", "api/generated/pywr.recorders.CSVRecorder.rst", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.GaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.HydropowerRecorder.rst", "api/generated/pywr.recorders.IndexParameterRecorder.rst", "api/generated/pywr.recorders.MeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.MeanParameterRecorder.rst", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder.rst", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder.rst", "api/generated/pywr.recorders.NodeRecorder.rst", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.NumpyArrayAreaRecorder.rst", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayLevelRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayStorageRecorder.rst", "api/generated/pywr.recorders.ParameterRecorder.rst", "api/generated/pywr.recorders.Recorder.rst", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.RollingWindowParameterRecorder.rst", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageRecorder.rst", "api/generated/pywr.recorders.TablesRecorder.rst", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.TotalDeficitNodeRecorder.rst", "api/generated/pywr.recorders.TotalFlowNodeRecorder.rst", "api/generated/pywr.recorders.TotalHydroEnergyRecorder.rst", "api/generated/pywr.recorders.TotalParameterRecorder.rst", "api/pywr.rst", "api/pywr.core.rst", "api/pywr.nodes.rst", "api/pywr.notebook.rst", "api/pywr.optimisation.rst", "api/pywr.parameters.rst", "api/pywr.recorders.rst", "api/pywr.solvers.rst", "api/pywr.utils.rst", "cookbook/aggregated_node.rst", "cookbook/aggregated_parameter.rst", "cookbook/control_curves.rst", "cookbook/cookbook.rst", "cookbook/dataframes.rst", "cookbook/demand_saving.rst", "err_perf.rst", "extending_pywr/extending_pywr_nodes.rst", "extending_pywr/extending_pywr_parameters.rst", "extending_pywr/extending_pywr_recorders.rst", "extending_pywr/index.rst", "formulation.rst", "index.rst", "install.rst", "json.rst", "license.rst", "tutorial.rst"], "titles": ["pywr.core.Scenario", "pywr.core.ScenarioCollection", "pywr.core.ScenarioIndex", "pywr.core.Timestep", "pywr.domains.river.Catchment", "pywr.domains.river.Reservoir", "pywr.domains.river.River", "pywr.domains.river.RiverGauge", "pywr.domains.river.RiverSplit", "pywr.domains.river.RiverSplitWithGauge", "pywr.nodes.AggregatedNode", "pywr.nodes.AggregatedStorage", "pywr.nodes.AnnualVirtualStorage", "pywr.nodes.BreakLink", "pywr.nodes.DelayNode", "pywr.nodes.Input", "pywr.nodes.Link", "pywr.nodes.LossLink", "pywr.nodes.MonthlyVirtualStorage", "pywr.nodes.MultiSplitLink", "pywr.nodes.Node", "pywr.nodes.Output", "pywr.nodes.PiecewiseLink", "pywr.nodes.RollingVirtualStorage", "pywr.nodes.SeasonalVirtualStorage", "pywr.nodes.Storage", "pywr.nodes.VirtualStorage", "pywr.parameters.AbstractThresholdParameter", "pywr.parameters.AggregatedIndexParameter", "pywr.parameters.AggregatedParameter", "pywr.parameters.AnnualHarmonicSeriesParameter", "pywr.parameters.ArrayIndexedParameter", "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "pywr.parameters.ArrayIndexedScenarioParameter", "pywr.parameters.BinaryStepParameter", "pywr.parameters.ConstantParameter", "pywr.parameters.ConstantScenarioIndexParameter", "pywr.parameters.ConstantScenarioParameter", "pywr.parameters.CurrentOrdinalDayThresholdParameter", "pywr.parameters.CurrentYearThresholdParameter", "pywr.parameters.DailyProfileParameter", "pywr.parameters.DataFrameParameter", "pywr.parameters.DeficitParameter", "pywr.parameters.DiscountFactorParameter", "pywr.parameters.DivisionParameter", "pywr.parameters.FlowDelayParameter", "pywr.parameters.FlowParameter", "pywr.parameters.HydropowerTargetParameter", "pywr.parameters.IndexParameter", "pywr.parameters.IndexedArrayParameter", "pywr.parameters.InterpolatedFlowParameter", "pywr.parameters.InterpolatedParameter", "pywr.parameters.InterpolatedQuadratureParameter", "pywr.parameters.InterpolatedVolumeParameter", "pywr.parameters.LogisticParameter", "pywr.parameters.MaxParameter", "pywr.parameters.MinParameter", "pywr.parameters.MonthlyProfileParameter", "pywr.parameters.MultipleThresholdIndexParameter", "pywr.parameters.MultipleThresholdParameterIndexParameter", "pywr.parameters.NegativeMaxParameter", "pywr.parameters.NegativeMinParameter", "pywr.parameters.NegativeParameter", "pywr.parameters.NodeThresholdParameter", "pywr.parameters.OffsetParameter", "pywr.parameters.Parameter", "pywr.parameters.ParameterThresholdParameter", "pywr.parameters.PiecewiseIntegralParameter", "pywr.parameters.RbfProfileParameter", "pywr.parameters.RecorderThresholdParameter", "pywr.parameters.RectifierParameter", "pywr.parameters.ScenarioDailyProfileParameter", "pywr.parameters.ScenarioMonthlyProfileParameter", "pywr.parameters.ScenarioWeeklyProfileParameter", "pywr.parameters.ScenarioWrapperParameter", "pywr.parameters.StorageParameter", "pywr.parameters.StorageThresholdParameter", "pywr.parameters.TablesArrayParameter", "pywr.parameters.UniformDrawdownProfileParameter", "pywr.parameters.WeeklyProfileParameter", "pywr.parameters.control_curves.BaseControlCurveParameter", "pywr.parameters.control_curves.ControlCurveIndexParameter", "pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "pywr.parameters.control_curves.ControlCurveParameter", "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "pywr.recorders.AggregatedRecorder", "pywr.recorders.Aggregator", "pywr.recorders.AnnualCountIndexParameterRecorder", "pywr.recorders.AnnualCountIndexThresholdRecorder", "pywr.recorders.AnnualTotalFlowRecorder", "pywr.recorders.CSVRecorder", "pywr.recorders.DeficitFrequencyNodeRecorder", "pywr.recorders.FlowDurationCurveDeviationRecorder", "pywr.recorders.FlowDurationCurveRecorder", "pywr.recorders.GaussianKDEStorageRecorder", "pywr.recorders.HydropowerRecorder", "pywr.recorders.IndexParameterRecorder", "pywr.recorders.MeanFlowNodeRecorder", "pywr.recorders.MeanParameterRecorder", "pywr.recorders.MinimumThresholdVolumeStorageRecorder", "pywr.recorders.MinimumVolumeStorageRecorder", "pywr.recorders.NodeRecorder", "pywr.recorders.NormalisedGaussianKDEStorageRecorder", "pywr.recorders.NumpyArrayAreaRecorder", "pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "pywr.recorders.NumpyArrayIndexParameterRecorder", "pywr.recorders.NumpyArrayLevelRecorder", "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "pywr.recorders.NumpyArrayNodeDeficitRecorder", "pywr.recorders.NumpyArrayNodeRecorder", "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "pywr.recorders.NumpyArrayParameterRecorder", "pywr.recorders.NumpyArrayStorageRecorder", "pywr.recorders.ParameterRecorder", "pywr.recorders.Recorder", "pywr.recorders.RollingMeanFlowNodeRecorder", "pywr.recorders.RollingWindowParameterRecorder", "pywr.recorders.SeasonalFlowDurationCurveRecorder", "pywr.recorders.StorageDurationCurveRecorder", "pywr.recorders.StorageRecorder", "pywr.recorders.TablesRecorder", "pywr.recorders.TimestepCountIndexParameterRecorder", "pywr.recorders.TotalDeficitNodeRecorder", "pywr.recorders.TotalFlowNodeRecorder", "pywr.recorders.TotalHydroEnergyRecorder", "pywr.recorders.TotalParameterRecorder", "Pywr reference documentation.", "Core classes", "Nodes", "Notebook Utilities", "Optimisation", "Parameters", "Recorders", "Solvers", "Utilities", "Aggregated nodes", "Aggregated parameters", "Dynamic behaviour and control curves", "Pywr cookbook examples", "Using external data", "Demand restrictions", "GLPK error handling and performance", "Extending Pywr with custom Nodes", "Extending Pywr with custom Parameters", "Extending Pywr with custom Recorders", "Extending Pywr", "Problem formulation", "Welcome to Pywr\u2019s documentation!", "Installing Pywr", "JSON model format", "License", "Tutorial"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 133, 134, 142, 143, 145, 147, 149], "model": [0, 1, 2, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 147, 150, 151], "name": [0, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 23, 25, 26, 77, 86, 88, 89, 96, 98, 101, 113, 114, 115, 119, 120, 125, 133, 135, 136, 139, 140, 142, 143, 149, 151], "int": [0, 2, 3, 12, 14, 18, 19, 23, 24, 41, 43, 45, 68, 77, 78, 83, 87, 88, 90, 94, 102, 115, 116, 121, 133], "size": [0, 32, 33, 36, 37, 74], "1": [0, 3, 8, 13, 18, 19, 22, 23, 25, 27, 30, 34, 35, 43, 47, 54, 68, 69, 70, 78, 82, 83, 84, 94, 95, 98, 99, 102, 107, 109, 110, 112, 114, 124, 125, 134, 135, 136, 139, 140, 142, 143, 147, 149, 150, 151], "slice": [0, 1], "none": [0, 9, 10, 15, 19, 21, 27, 28, 29, 41, 47, 50, 51, 52, 53, 57, 68, 77, 82, 83, 88, 90, 92, 94, 95, 96, 101, 102, 113, 114, 115, 119, 120, 124, 133, 142], "ensemble_nam": 0, "repres": [0, 1, 2, 5, 22, 24, 40, 47, 57, 78, 82, 84, 94, 102, 125, 140, 142, 143, 149], "typic": [0, 5, 137, 142], "us": [0, 1, 2, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 57, 64, 68, 74, 75, 77, 78, 80, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 124, 125, 129, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 148, 149, 150, 151], "run": [0, 1, 18, 23, 27, 77, 95, 121, 124, 130, 132, 134, 139, 143, 148, 149, 151], "mani": [0, 74, 137, 139, 143, 145], "similar": [0, 86, 120, 148], "simultan": [0, 88], "A": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 36, 37, 40, 47, 68, 71, 73, 82, 83, 84, 86, 89, 90, 94, 95, 97, 102, 109, 120, 123, 124, 130, 133, 134, 135, 136, 137, 140, 142, 146, 147, 148, 149, 150], "small": [0, 30], "number": [0, 1, 3, 8, 9, 13, 14, 18, 19, 22, 23, 25, 45, 68, 71, 73, 74, 78, 82, 87, 88, 94, 102, 115, 121, 135, 143, 149], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 85, 86, 88, 89, 90, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 126, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 145, 147], "object": [0, 1, 5, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 57, 68, 71, 73, 77, 80, 82, 83, 85, 90, 120, 130, 133, 139, 145, 149], "return": [0, 5, 10, 11, 27, 30, 34, 38, 39, 41, 43, 45, 46, 47, 49, 54, 57, 58, 59, 63, 64, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 124, 125, 130, 136, 140, 142, 143, 149], "differ": [0, 47, 57, 71, 72, 73, 74, 83, 85, 86, 92, 93, 95, 108, 117, 118, 122, 124, 137, 139, 142, 143, 149], "valu": [0, 4, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 90, 92, 93, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 124, 125, 134, 136, 138, 139, 140, 141, 142, 143, 149], "depend": [0, 27, 38, 39, 63, 66, 69, 76, 84, 136, 138, 140, 147], "multipl": [0, 6, 8, 22, 25, 32, 58, 59, 74, 81, 83, 85, 88, 120, 126, 134, 135, 137, 139, 143, 149], "can": [0, 1, 5, 9, 10, 11, 13, 24, 25, 28, 29, 41, 42, 46, 52, 57, 74, 75, 77, 80, 82, 83, 85, 86, 88, 89, 94, 95, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 123, 125, 129, 132, 135, 136, 137, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151], "defin": [0, 1, 5, 25, 42, 57, 67, 68, 83, 86, 114, 120, 133, 134, 137, 139, 140, 142, 143, 149, 151], "some": [0, 114, 129, 136, 137, 140, 145, 149, 151], "vari": [0, 31, 32, 33, 36, 37, 74, 134, 135, 137, 140, 142, 143, 149], "one": [0, 6, 8, 9, 19, 24, 27, 28, 29, 38, 39, 44, 63, 66, 68, 69, 76, 78, 83, 86, 88, 104, 107, 136, 137, 139, 140, 142, 148, 149], "anoth": [0, 9, 19, 44, 51, 52, 55, 56, 62, 64, 139, 142, 149], "ar": [0, 1, 2, 4, 5, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 33, 36, 37, 40, 49, 68, 74, 82, 83, 84, 85, 86, 92, 93, 114, 117, 118, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 148, 149, 151], "ensembl": [0, 1, 72, 74], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 67, 68, 70, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 124, 125, 129, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 148, 149, 151], "instanc": [0, 1, 2, 7, 10, 11, 16, 25, 47, 58, 59, 74, 81, 85, 89, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 124, 132, 143, 145, 149], "attach": [0, 17, 25, 77, 80, 120, 136, 142, 143], "str": [0, 10, 11, 23, 25, 26, 28, 29, 57, 85, 86, 88, 89, 90, 92, 93, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 125], "option": [0, 6, 15, 16, 19, 21, 23, 25, 26, 41, 57, 68, 75, 77, 80, 82, 83, 85, 86, 88, 89, 92, 93, 94, 98, 102, 113, 115, 117, 118, 125, 141, 143, 148, 150], "default": [0, 1, 9, 12, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 34, 41, 45, 46, 47, 54, 55, 56, 57, 64, 68, 70, 83, 84, 85, 88, 90, 94, 95, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 124, 125, 133, 134, 141, 148, 149, 151], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 52, 54, 55, 56, 57, 64, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 124, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151], "If": [0, 13, 17, 19, 23, 25, 26, 27, 41, 47, 57, 68, 77, 82, 83, 84, 88, 92, 94, 95, 102, 107, 110, 114, 120, 124, 125, 134, 136, 139, 141, 143, 145, 148, 151], "given": [0, 2, 5, 14, 18, 19, 23, 25, 26, 45, 46, 47, 55, 56, 57, 58, 59, 67, 68, 71, 72, 73, 74, 75, 77, 86, 95, 117, 120, 124, 136, 139, 140, 149], "thi": [0, 1, 2, 3, 6, 8, 9, 10, 11, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 40, 41, 42, 45, 46, 47, 49, 55, 56, 57, 64, 67, 68, 71, 73, 74, 75, 77, 78, 83, 85, 86, 88, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 124, 125, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151], "subset": [0, 83], "actual": [0, 20, 42, 47, 92, 108, 140, 142, 149], "larg": [0, 77, 139], "certain": [0, 22], "analysi": [0, 120], "e": [0, 1, 4, 6, 9, 13, 16, 19, 20, 25, 28, 29, 30, 42, 43, 83, 86, 89, 94, 97, 102, 104, 108, 109, 123, 135, 136, 137, 139, 140, 141, 142, 143, 149, 150], "g": [0, 6, 9, 16, 20, 28, 29, 42, 47, 86, 89, 94, 95, 97, 102, 104, 109, 123, 124, 136, 137, 139, 140, 141, 142, 143, 149], "optimis": [0, 34, 54, 57, 64, 68, 70, 94, 102, 104, 114, 126, 136, 147], "onli": [0, 2, 3, 6, 13, 14, 23, 24, 25, 45, 75, 86, 88, 133, 136, 139, 140, 143, 148, 149], "done": [0, 142, 148], "iter": [0, 8, 9, 10, 11, 19, 22, 27, 28, 29, 33, 36, 37, 40, 49, 57, 58, 59, 67, 68, 71, 73, 74, 80, 81, 82, 83, 85, 90, 120, 139], "user": [0, 1, 2, 5, 19, 68, 86, 94, 102, 120, 128, 139, 141, 143, 145, 149], "describ": [0, 13, 140, 149], "each": [0, 2, 4, 12, 18, 19, 22, 23, 24, 43, 47, 57, 68, 71, 72, 73, 74, 82, 83, 84, 88, 89, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 124, 137, 139, 140, 142, 143, 146, 149], "scenariocollect": [0, 2, 126], "scenarioindex": [0, 1, 3, 126, 143], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 142, 143, 149], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 130, 133, 142], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 133, 134, 142, 143], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 142, 143, 149, 151], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 135, 140, 142, 143], "collect": [1, 28, 29, 85, 148], "scenario": [1, 2, 3, 14, 31, 32, 33, 36, 37, 41, 45, 71, 72, 73, 74, 77, 85, 86, 88, 89, 90, 92, 93, 94, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 124, 126, 137, 151], "hold": [1, 16, 143], "control": [1, 5, 74, 80, 81, 82, 83, 84, 126, 136, 138, 139, 140, 143, 147], "which": [1, 10, 11, 12, 17, 18, 19, 20, 25, 28, 29, 30, 32, 49, 52, 57, 68, 71, 73, 74, 78, 81, 83, 86, 88, 90, 92, 94, 102, 133, 136, 137, 139, 141, 142, 143, 148, 149, 151], "combin": [1, 2, 42, 88, 89, 104, 126, 135, 140, 141, 143], "dure": [1, 2, 19, 23, 24, 42, 64, 68, 98, 99, 100, 104, 108, 114, 124, 125, 134, 137, 139, 140, 148], "execut": 1, "By": [1, 57, 83, 85, 94, 102], "product": [1, 28, 29, 47, 86, 95, 124, 138, 140], "all": [1, 14, 17, 20, 28, 31, 45, 80, 90, 94, 102, 114, 120, 131, 132, 133, 134, 135, 138, 139, 142, 143, 148, 151], "possibl": [1, 140, 141, 143, 148, 149], "howev": [1, 10, 11, 16, 141], "set": [1, 14, 23, 25, 28, 29, 47, 114, 133, 142, 143, 148, 151], "individu": [1, 32, 135, 136], "restrict": [1, 136, 138, 147], "from": [1, 3, 8, 9, 14, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 46, 47, 53, 67, 68, 75, 77, 78, 83, 85, 88, 89, 90, 92, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 124, 131, 132, 133, 135, 137, 139, 141, 142, 143, 147, 149, 151], "altern": [1, 42, 148, 149], "mai": [1, 6, 19, 82, 84, 104, 139, 140, 141, 143, 148, 149], "provid": [1, 5, 14, 19, 20, 25, 40, 46, 48, 50, 53, 57, 71, 72, 73, 75, 78, 85, 86, 88, 89, 92, 97, 98, 109, 114, 120, 123, 125, 137, 142, 143, 145, 148, 149], "an": [1, 2, 4, 9, 10, 11, 14, 17, 19, 20, 22, 23, 30, 31, 32, 33, 34, 36, 37, 40, 48, 49, 54, 57, 58, 59, 68, 70, 75, 78, 80, 81, 83, 85, 87, 90, 92, 93, 94, 95, 98, 102, 104, 105, 114, 117, 118, 120, 121, 125, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 148, 149, 151], "arrai": [1, 2, 31, 32, 40, 49, 57, 67, 68, 71, 73, 77, 84, 86, 92, 93, 95, 117, 118, 120, 126, 133, 140, 143], "specif": [1, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 135, 140, 143, 145, 148, 149], "indic": [1, 2, 24, 83], "should": [1, 10, 11, 16, 20, 33, 36, 37, 47, 57, 67, 68, 71, 73, 82, 83, 84, 86, 95, 117, 124, 133, 136, 137, 139, 141, 148, 149, 150], "latter": [1, 86], "approach": [1, 137, 148], "take": [1, 41, 55, 56, 60, 61, 62, 77, 85], "preced": 1, "over": [1, 23, 52, 71, 73, 85, 86, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "former": 1, "per": [1, 8, 9, 32, 47, 71, 72, 73, 85, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 143], "global_id": [2, 143], "index": [2, 3, 27, 28, 31, 32, 33, 41, 48, 49, 58, 59, 77, 81, 83, 90, 92, 121, 126, 136, 140, 143], "simul": [2, 3, 74, 94, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 125, 134, 137, 141, 150], "It": [2, 8, 13, 29, 42, 47, 74, 78, 90, 94, 95, 102, 120, 124, 137, 139, 141, 142, 143, 147, 148, 149], "allow": [2, 23, 26, 83, 85, 88, 135, 143], "them": [2, 142], "alter": 2, "calcul": [2, 17, 23, 30, 42, 43, 46, 47, 49, 53, 67, 68, 75, 89, 92, 93, 95, 97, 107, 108, 109, 110, 114, 115, 117, 118, 123, 124, 139, 140, 143], "base": [2, 3, 20, 23, 27, 33, 43, 48, 49, 57, 58, 59, 68, 74, 80, 113, 114, 126, 130, 133, 134, 140, 142, 143, 145], "gener": [2, 15, 21, 25, 47, 50, 53, 83, 141, 143, 147, 150], "unlik": [2, 86, 142], "need": [2, 25, 92, 136, 139, 142, 143, 148, 149, 151], "instanti": [2, 128], "read": [2, 3, 77, 139, 143], "global": [2, 3], "refer": [2, 3, 8, 9, 19, 68, 86, 120, 135, 136, 137, 139, 143, 147, 149], "np": [2, 35, 57, 64, 68, 136, 143], "period": [3, 14, 18, 23, 24, 30, 88, 149], "doubl": [3, 27, 47, 67, 95, 114, 124, 143, 149], "dai": [3, 12, 14, 23, 24, 27, 30, 45, 47, 57, 58, 68, 78, 79, 88, 95, 104, 115, 124, 125, 143, 149, 151], "represent": [3, 142], "time": [3, 23, 25, 26, 31, 32, 33, 36, 37, 46, 47, 50, 57, 86, 88, 94, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 125, 133, 135, 139, 140, 141, 142, 143, 149], "step": [3, 19, 22, 23, 25, 26, 46, 47, 50, 57, 85, 99, 103, 105, 106, 107, 108, 109, 110, 111, 112, 125, 133, 142], "panda": [3, 41, 139, 148, 151], "length": [3, 8, 9, 19, 30, 33, 36, 37, 45, 57, 68, 71, 73, 82, 83, 84, 92, 125], "dayofyear": 3, "year": [3, 12, 18, 24, 30, 39, 43, 68, 78, 79, 87, 88, 89, 104, 137, 140, 149], "dayofyear_index": 3, "zero": [3, 13, 17, 19, 22, 42, 47, 52, 67, 68, 78, 83, 92, 99, 102, 107, 110, 136, 141, 142, 143, 151], "begin": [3, 57, 140, 146], "0": [3, 6, 9, 12, 14, 15, 16, 18, 21, 22, 24, 25, 27, 34, 35, 41, 43, 45, 46, 47, 54, 55, 56, 57, 64, 67, 68, 70, 77, 78, 82, 83, 84, 86, 90, 92, 93, 94, 95, 98, 99, 102, 107, 109, 110, 112, 114, 117, 118, 124, 125, 135, 136, 139, 140, 142, 143, 146, 149, 150, 151], "end": [3, 78, 88, 94, 102, 134, 140, 146, 149, 151], "366": [3, 40, 71, 78], "29th": 3, "februari": 3, "skip": 3, "leap": [3, 30], "month": [3, 12, 18, 24, 32, 57, 78, 88, 117, 140, 143], "week_index": 3, "week": [3, 79, 139], "last": [3, 19, 41, 57, 77, 79, 82, 84, 104, 116, 139, 149, 151], "51": [3, 150], "alwai": [3, 68, 139], "slightli": [3, 142], "longer": 3, "than": [3, 8, 9, 17, 19, 23, 47, 67, 79, 83, 87, 99, 114, 134, 135, 139, 140, 143, 148, 149, 151], "7": [3, 79, 136, 148, 149], "12": [3, 12, 24, 32, 57, 78, 139, 143, 149, 151], "is_leap_year": 3, "bool": [3, 12, 18, 24, 27, 75, 94, 102, 112, 114, 120, 125, 133, 134], "true": [3, 27, 83, 94, 102, 120, 134, 139, 141, 142, 149], "current": [3, 10, 11, 23, 26, 34, 38, 39, 43, 46, 49, 53, 54, 57, 70, 75, 76, 80, 83, 84, 133, 137, 139, 143, 149], "fals": [3, 12, 18, 24, 27, 58, 59, 65, 75, 112, 114, 125, 133, 134], "otherwis": [3, 27, 57, 68, 88, 99, 143, 149], "hydrolog": 4, "suppli": [4, 16, 22, 25, 86, 88, 110, 140, 142, 146, 149, 151], "water": [4, 23, 26, 47, 95, 124, 135, 140, 142, 150], "network": [4, 6, 8, 9, 10, 11, 15, 16, 21, 25, 129, 133, 142, 147, 151], "initialis": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 143], "new": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 104, 141, 142], "node": [4, 5, 6, 8, 9, 42, 45, 46, 47, 50, 53, 58, 63, 75, 76, 77, 78, 80, 82, 83, 84, 89, 90, 92, 93, 95, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 115, 117, 118, 119, 120, 122, 123, 124, 126, 133, 136, 137, 138, 139, 140, 141, 143, 145, 147, 151], "input": [4, 13, 14, 22, 25, 50, 53, 135, 136, 141, 142, 145, 149, 151], "fix": [4, 8, 17, 19, 22, 135, 139], "inflow": [4, 23, 25, 26, 136, 142], "min_flow": [4, 13, 15, 21, 47, 135, 142], "max_flow": [4, 6, 9, 13, 15, 16, 19, 21, 22, 25, 42, 47, 91, 107, 108, 110, 122, 135, 139, 140, 142, 143, 149, 151], "same": [4, 22, 30, 33, 36, 37, 57, 68, 72, 83, 85, 92, 114, 136, 143], "specifi": [4, 14, 23, 24, 25, 26, 45, 82, 83, 88, 94, 102, 117, 135, 139, 140, 148, 149], "flow": [4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 42, 45, 46, 47, 50, 58, 63, 89, 92, 93, 95, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 122, 123, 124, 126, 136, 137, 138, 139, 142, 143, 149, 151], "keyword": [4, 5, 50, 52, 53, 57, 68, 86, 90, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 125, 139, 141, 149], "overrid": 4, "ani": [4, 14, 15, 17, 21, 24, 25, 28, 45, 46, 75, 82, 84, 88, 99, 114, 135, 138, 141, 150, 151], "argument": [4, 49, 50, 52, 53, 68, 86, 88, 90, 92, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 125, 139, 141, 143, 148, 149], "float": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 21, 23, 25, 26, 30, 34, 43, 45, 46, 47, 49, 54, 55, 56, 57, 58, 59, 62, 64, 68, 70, 81, 82, 83, 84, 94, 95, 98, 109, 114, 124, 125, 134, 143], "function": [4, 5, 6, 16, 19, 22, 28, 29, 30, 34, 54, 67, 68, 70, 85, 86, 92, 93, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 126, 129, 138, 139, 143, 145, 148], "amount": [4, 139, 143], "timestep": [4, 5, 14, 23, 27, 31, 32, 38, 39, 41, 42, 45, 46, 75, 77, 88, 91, 95, 115, 116, 121, 126, 137, 139, 140, 142, 146, 149, 151], "curv": [5, 74, 80, 81, 82, 83, 84, 92, 93, 117, 118, 126, 136, 138, 140, 143, 147], "subclass": [5, 131, 132, 133, 142], "storag": [5, 11, 12, 13, 18, 23, 24, 26, 53, 75, 76, 80, 81, 82, 83, 84, 94, 99, 100, 102, 103, 106, 112, 118, 138, 140, 142], "addit": [5, 8, 9, 19, 68, 86, 90, 138, 141, 142, 148, 149], "simpl": [5, 8, 15, 21, 126, 142, 149], "ha": [5, 17, 46, 88, 89, 95, 134, 139, 140, 141, 142, 143, 148, 149, 151], "above_curve_cost": 5, "when": [5, 8, 9, 18, 19, 22, 24, 34, 54, 57, 64, 68, 70, 83, 85, 86, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 121, 134, 135, 136, 137, 139, 140, 143, 148, 149, 150], "abov": [5, 9, 13, 19, 83, 92, 136, 139, 143, 147, 148], "its": [5, 17, 19, 24, 34, 46, 54, 68, 70, 75, 136, 139, 142], "cost": [5, 7, 9, 13, 19, 22, 23, 25, 26, 82, 89, 97, 109, 123, 135, 139, 140, 141, 142, 149, 151], "below": [5, 82, 83, 92, 94, 99, 102, 120, 135, 136, 137, 139, 140, 142, 143, 148, 149], "neg": [5, 23, 25, 26, 41, 60, 61, 62, 68, 77, 136], "benefit": [5, 13, 22, 25, 142, 145, 151], "fill": 5, "control_curv": [5, 140], "posit": [5, 23, 25, 26, 27, 30, 34, 41, 68, 70, 77, 83, 84, 92, 136], "percentag": [5, 17, 80, 83], "have": [6, 27, 42, 46, 75, 79, 92, 133, 134, 139, 141, 143, 145, 149, 150, 151], "upstream": [6, 142], "confluenc": 6, "downstream": [6, 8, 142], "link": [6, 13, 19, 22, 139, 142, 143, 149], "maximum": [6, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 54, 55, 60, 68, 70, 84, 136, 138, 142, 149, 151], "constraint": [6, 15, 16, 21, 24, 114, 134, 135, 137, 149, 151], "5": [6, 16, 82, 86, 135, 136, 139, 140], "gaug": [7, 9, 149], "station": 7, "minimum": [7, 9, 15, 19, 21, 23, 25, 26, 47, 56, 61, 68, 84, 94, 100, 102, 134, 135, 136, 142, 149, 151], "residu": [7, 9, 78, 149], "mrf": [7, 9, 149], "mrf_cost": [7, 9, 149], "rout": [7, 8, 9, 13, 22, 120, 133], "via": [7, 9, 13, 94, 102, 135, 136, 139, 141, 143, 145], "other": [7, 9, 10, 11, 19, 20, 25, 27, 42, 46, 75, 85, 114, 126, 135, 136, 138, 141, 142, 145, 149], "unconstrain": [7, 9, 19], "split": [8, 9, 19], "specialis": [8, 145], "version": [8, 23, 55, 56, 64, 139, 143, 147, 148, 150], "multisplitlink": [8, 9], "more": [8, 9, 19, 55, 56, 64, 68, 79, 82, 83, 84, 104, 135, 136, 137, 140, 142, 143, 149, 150], "conveni": [8, 149], "init": 8, "intend": [8, 22, 42, 47, 78, 88, 114, 147], "case": [8, 9, 27, 52, 139, 141, 142, 148], "where": [8, 9, 22, 23, 42, 47, 55, 56, 64, 77, 87, 88, 99, 120, 135, 139, 140, 142, 149], "ratio": [8, 9, 19, 107, 110, 138, 142], "requir": [8, 9, 19, 23, 25, 26, 47, 77, 86, 94, 102, 133, 135, 136, 139, 142, 143, 148, 149], "distribut": [8, 94, 102, 148, 150], "factor": [8, 9, 19, 23, 26, 32, 43, 47, 49, 89, 95, 97, 98, 109, 123, 124, 125, 133, 135, 140, 151], "forc": [8, 9], "extra_slot": [8, 9, 19], "assum": [8, 9, 23, 57, 67, 88], "less": [8, 9, 23, 47, 99, 114, 134, 135, 143, 151], "document": [8, 9, 12, 68, 86, 136, 137, 139, 140, 143, 145, 151], "slot_nam": [8, 9, 19, 142], "identifi": [8, 9, 142], "slot": [8, 9, 19, 149], "connect": [8, 9, 10, 11, 13, 14, 16, 19, 20, 22, 25, 135, 142, 149, 151], "must": [8, 9, 17, 19, 28, 29, 30, 40, 57, 74, 83, 86, 88, 92, 93, 114, 117, 118, 134, 135, 139, 143, 148, 149], "extra": [8, 9, 19], "nstep": [8, 19, 22], "belong": [8, 9, 13, 14, 17, 19, 20, 22, 140], "string": [8, 9, 13, 14, 17, 19, 20, 22, 27, 57, 77, 86, 120, 139, 149], "uniqu": [8, 9, 13, 14, 17, 19, 20, 22], "As": [9, 139, 143, 148, 149, 151], "riversplit": 9, "creat": [9, 16, 25, 57, 94, 102, 114, 120, 136, 137, 141, 142, 143, 145, 148, 149, 151], "underli": 9, "part": [9, 74, 143], "intent": 9, "proport": [9, 17, 19, 23, 25, 26, 75, 94, 112], "abstract": [9, 20, 135], "90": [9, 140], "x0": [9, 19], "xo": [9, 19], "x1": [9, 19], "xi": [9, 19], "c": [9, 13, 19, 135, 141, 143, 146, 148, 150], "x2": [9, 19], "bo": [9, 19], "bi": [9, 19], "d": [9, 13, 19, 135, 140], "ag": 9, "aggreg": [10, 11, 28, 29, 85, 92, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 133, 138, 140, 142, 143, 147], "sum": [10, 11, 28, 29, 85, 86, 125, 135, 138, 143], "behav": [10, 11, 25, 27, 28, 29, 86, 136], "like": [10, 11, 19, 22, 25, 27, 28, 29, 57, 68, 136, 141, 149], "within": [10, 11, 24, 33, 36, 37, 88, 137, 141, 151], "list": [10, 11, 19, 22, 23, 26, 28, 29, 82, 83, 84, 88, 89, 92, 133, 139, 140, 143, 148, 149], "total": [10, 11, 19, 40, 47, 85, 89, 95, 97, 109, 122, 123, 124, 125, 135, 143], "note": [10, 11, 13, 19, 22, 23, 26, 27, 42, 46, 47, 49, 75, 83, 95, 107, 108, 110, 124, 135, 139, 148], "flow_weight": 10, "volum": [11, 12, 13, 18, 23, 24, 25, 26, 53, 75, 76, 78, 80, 82, 83, 94, 99, 100, 102, 112, 137, 140, 142, 143, 149], "current_pc": 11, "storage_nod": [11, 75, 80, 81, 82, 83, 84, 140], "virtual": [12, 18, 23, 24, 26], "reset": [12, 18, 24, 68, 78, 133, 139], "annual": [12, 30, 40, 71, 73, 78, 94, 102, 104, 126, 140], "licenc": [12, 23, 24, 78, 135, 143], "see": [12, 16, 23, 26, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 137, 139, 143, 148, 149, 150, 151], "core": [12, 23, 26, 58, 63, 66, 76, 85, 88, 89, 92, 93, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 125, 126, 133, 143, 145, 147, 148, 149, 151], "virtualstorag": 12, "reset_dai": [12, 24, 78], "31": [12, 24, 78, 149, 151], "initi": [12, 14, 18, 23, 24, 25, 26, 45, 78, 142, 143, 149], "reset_month": [12, 24, 78], "reset_to_initial_volum": [12, 18, 24], "instead": [12, 14, 18, 22, 23, 24, 25, 45, 57, 86, 114, 135, 139, 143, 148, 149], "compound": [13, 22, 142], "reduc": [13, 78, 140], "In": [13, 16, 25, 27, 68, 82, 83, 135, 137, 139, 140, 141, 142, 143, 145, 148, 149, 151], "form": [13, 140, 145], "3": [13, 47, 82, 95, 124, 135, 139, 148, 149, 150, 151], "b": [13, 135, 143, 146], "output": [13, 14, 17, 22, 25, 34, 88, 89, 135, 136, 139, 140, 141, 142, 149, 151], "f": [13, 30, 135, 139, 149], "bottleneck": 13, "x": [13, 50, 51, 52, 53, 67, 136, 143, 146, 147], "9": [13, 90, 139, 140, 149], "6": [13, 47, 54, 95, 124, 151], "x_o": 13, "x_i": 13, "d_o": 13, "e_o": 13, "f_o": 13, "compos": [13, 142], "place": [13, 148], "normal": [13, 25, 140], "situat": [13, 22, 24], "result": [13, 85, 86, 88, 104, 132, 134, 135, 141, 143, 151], "lp": [13, 148], "easier": 13, "solv": [13, 133, 142, 143, 146, 148], "delai": [14, 45], "composit": 14, "consist": [14, 40, 68], "intern": [14, 17, 19, 25, 34, 40, 54, 70, 83, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 141, 142], "flowdelayparamet": 14, "prior": [14, 19, 23, 45, 94, 102, 141], "being": [14, 45, 82, 94, 102, 104, 140, 145], "valid": [14, 23, 34, 45, 54, 70, 139, 151], "exactli": [14, 45, 143], "divis": [14, 45], "delta": [14, 47, 95, 124], "initial_flow": [14, 45], "avail": [14, 41, 45, 77, 136, 139, 142, 143, 148], "constant": [14, 31, 34, 36, 37, 45, 55, 56, 60, 61, 64, 136, 140, 143, 149], "across": [14, 19, 23, 24, 31, 45, 68, 74, 85, 86, 89, 92, 93, 117, 118, 120], "point": [15, 21, 23, 50, 52, 53, 94, 102], "pipe": [16, 142], "between": [16, 19, 24, 47, 57, 74, 75, 82, 84, 92, 95, 108, 122, 124, 134, 135, 140, 143, 149], "edg": [16, 133, 135, 143, 147, 151], "disconnect": [16, 135], "cannot": [16, 143], "loss": 17, "through": [17, 19, 25, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 137, 142, 151], "sent": 17, "max": [17, 23, 28, 29, 86, 114, 138], "min": [17, 28, 29, 86, 114, 138], "appli": [17, 23, 24, 41, 57, 64, 68, 77, 86, 89, 98, 125, 135, 139, 140, 149], "enforc": [17, 19, 24, 135], "net": [17, 25, 136], "after": [17, 18, 41, 42, 45, 77, 95, 134, 142], "itself": [17, 47, 95, 124, 139], "record": [17, 25, 27, 42, 47, 63, 66, 69, 76, 126, 134, 137, 142, 145, 147, 151], "would": [17, 135, 141, 142], "loss_factor": 17, "lost": 17, "greater": [17, 19, 67, 87], "equal": [17, 19, 23, 43, 51, 52, 68, 71, 73, 74, 87, 99, 114, 135, 142, 151], "gross": 17, "initial_month": 18, "start": [18, 24, 67, 83, 88, 143, 148, 149, 151], "extens": [19, 22, 94, 102, 139, 148], "piecewiselink": [19, 142], "includ": [19, 88, 135, 136, 137, 141, 143, 145, 148, 149, 150, 151], "conceptu": 19, "look": [19, 41, 77, 139, 142], "follow": [19, 47, 54, 70, 95, 124, 132, 136, 139, 140, 143, 148, 150], "sublink": [19, 22], "ad": [19, 28, 29, 135, 141, 143], "final": [19, 86, 104, 134, 140, 151], "mechan": [19, 83], "non": [19, 22, 30, 68, 74, 104, 136, 148], "aggregatednod": [19, 135, 142], "monoton": [19, 22, 67], "increas": [19, 22, 25, 67], "piec": [19, 22], "wise": [19, 22], "correspond": [19, 22, 57, 68, 82, 83, 86, 134, 140, 148, 149], "rang": [19, 34, 54, 70, 83, 88, 92, 93, 117, 118], "first": [19, 23, 25, 26, 27, 41, 46, 57, 68, 77, 82, 83, 84, 85, 86, 120, 143, 148, 149, 151], "item": [19, 83, 120, 149], "pass": [19, 50, 52, 53, 82, 83, 84, 90, 120, 139, 142, 143, 148, 149], "particular": [19, 47, 99, 150], "normalis": [19, 102], "solver": [19, 42, 126, 141, 147, 148], "care": 19, "constrain": [19, 114, 138, 142], "whole": [19, 79], "expect": [19, 139, 140, 149], "inherit": [20, 133, 143], "basenod": [20, 151], "type": [20, 74, 83, 135, 136, 139, 140, 142, 143, 145, 149, 151], "storageinput": 20, "directli": [20, 22, 25, 86, 139, 149], "linear": [22, 98, 125, 133, 141, 142, 143, 146, 148], "rate": [22, 43, 47, 54, 95, 124, 142], "beyond": [22, 143], "limit": [22, 151], "chang": [22, 23, 25, 57, 137, 143], "implement": [22, 23, 133, 137, 143], "structur": [22, 142, 143, 145, 147], "so": [22, 83, 84, 121, 140, 142, 143, 148, 151], "separ": [22, 57, 139], "domain": [22, 128], "sub": [22, 25, 86, 142, 145], "n": [22, 30, 115, 116], "mean": [22, 29, 30, 42, 85, 86, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 138, 139, 140], "do": [22, 74, 142, 145, 151], "travers": 22, "due": [22, 135], "middl": 22, "sever": [22, 104, 133, 140, 142, 148], "made": [22, 136, 137, 149], "reason": 22, "break": 22, "avoid": [22, 143, 149], "geometr": 22, "present": [22, 139], "roll": 23, "updat": [23, 137, 139, 143], "utilis": [23, 74, 78], "immedi": 23, "occur": [23, 47, 141, 151], "replenish": 23, "until": [23, 84, 134], "full": [23, 82, 120, 140, 143], "complet": [23, 95], "At": [23, 82, 140], "previou": [23, 27, 46, 50, 58, 63, 115, 139, 143], "behaviour": [23, 72, 135, 141, 142, 143], "up": [23, 41, 77, 136, 148], "17": [23, 147, 149], "wa": [23, 42, 46, 75, 136, 139, 148], "meant": 23, "imposs": 23, "higher": 23, "even": [23, 143, 150], "lower": [23, 47, 52, 57, 64, 68, 84, 92, 94, 102, 114, 134, 140], "out": [23, 41, 77, 142], "affect": [23, 26], "multipli": [23, 26, 125, 140], "remov": [23, 26, 28, 29, 142, 143, 148, 151], "min_volum": [23, 25, 26, 149], "reach": [23, 26, 134, 141], "max_volum": [23, 25, 26, 82, 83, 149], "initial_volum": [23, 25, 26, 82, 149], "initial_volume_pc": [23, 25, 26], "either": [23, 25, 26, 57, 86, 114, 135, 141, 148, 150], "absolut": [23, 25, 26, 75, 112], "term": [23, 25, 26, 141, 150], "both": [23, 25, 26, 83, 85, 88, 114, 135, 136, 139, 143, 148, 149], "becaus": [23, 25, 26, 137, 142, 151], "evalu": [23, 25, 26, 27, 42, 136, 139, 143], "ignor": [23, 25, 26, 114], "daili": [23, 40, 57, 68, 71, 104, 121, 139, 140, 149, 151], "frequenc": [23, 91, 94, 102], "outfrom": [23, 26], "todo": [23, 26], "properti": [23, 26, 88, 89, 114, 130, 133, 142, 149, 151], "respect": [23, 25, 26, 68, 82, 114, 135, 140, 141, 143, 148], "issu": [23, 26], "242": [23, 26], "oper": [24, 89, 97, 109, 123, 136, 137], "most": [24, 47, 137, 139, 142, 149], "end_dai": 24, "end_month": 24, "stop": 24, "For": [24, 25, 74, 85, 88, 89, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 136, 137, 139, 142, 143, 145, 149], "remain": [24, 68, 143], "unchang": 24, "doe": [24, 42, 77, 95, 124, 133, 135, 136, 139, 141, 142], "date": [24, 88, 139, 149], "earlier": [24, 141], "boundari": [24, 68, 137, 139, 142], "exampl": [24, 25, 49, 74, 82, 85, 86, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 135, 136, 137, 140, 142, 143, 145, 147, 148, 149], "activ": [24, 34, 54, 70, 126], "octob": 24, "march": 24, "april": 24, "septemb": 24, "explicit": 25, "about": [25, 149, 151], "thei": [25, 82, 84, 114, 136, 137, 141], "reservoir": [25, 82, 136, 137, 140, 143], "num_output": [25, 149], "num_input": [25, 149], "2": [25, 30, 82, 135, 139, 140, 143, 149], "demand1": [25, 139], "from_slot": 25, "demand2": [25, 139], "attribtu": 25, "modifi": [25, 143, 148, 150], "independ": [25, 68, 137], "15": 25, "integ": [25, 68, 83, 86, 136, 140], "penalis": 25, "give": [25, 42, 47, 95, 124, 140], "releas": [25, 137, 148], "decreas": 25, "area": [25, 103], "level": [25, 49, 83, 106, 130, 139, 140, 149], "These": [25, 40, 46, 75, 82, 83, 84, 85, 86, 114, 137, 141, 142, 143, 145, 148], "access": [25, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 132, 139, 143, 151], "get_area": 25, "get_level": 25, "unit": [26, 47, 95, 124, 148], "outflow": [26, 142], "threshold": [27, 55, 56, 58, 59, 60, 61, 69, 87, 88, 99, 121, 126, 136], "predic": 27, "ratchet": 27, "two": [27, 38, 39, 63, 66, 67, 69, 76, 84, 86, 135, 136, 139, 140, 141, 142, 143, 149, 151], "state": [27, 137, 140], "compar": [27, 55, 56, 62, 64, 82, 84, 88, 92, 121, 136, 137, 141], "zeroth": [27, 30, 42], "One": [27, 145], "lt": 27, "gt": 27, "eq": 27, "le": 27, "ge": [27, 146], "onc": [27, 88, 139, 140, 143, 149], "trigger": [27, 148], "stai": 27, "On": 27, "scenario_index": [27, 90, 143], "els": [27, 142, 149], "agg_func": [28, 29, 85, 92, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 136, 140], "indexparamet": [28, 29, 36, 49, 87, 88, 96, 105, 121, 136, 140], "Its": 28, "": [28, 29, 42, 46, 50, 68, 74, 80, 82, 83, 84, 107, 110, 114, 136, 137, 139, 140, 141, 142, 143, 148, 149, 151], "child": [28, 29, 74, 136, 143], "callabl": [28, 29, 85, 86, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "accept": [28, 29, 86], "amplitud": 30, "phase": 30, "harmon": 30, "seri": [30, 41, 94, 102], "compris": 30, "cosin": 30, "365": [30, 79], "perform": [30, 85, 86, 133, 134, 147], "julien": 30, "minu": [30, 107], "caus": [30, 68, 86, 141], "discontinu": 30, "t": [30, 142, 143, 146, 151], "sum_": 30, "a_n": 30, "cdot": 30, "co": 30, "pi": 30, "nt": 30, "phi_n": 30, "array_lik": [30, 50, 52, 53, 57, 68, 83], "shift": [30, 68], "baselin": [32, 136, 140], "timeseri": [32, 41, 103, 105, 106, 107, 108, 109, 110, 111, 112, 124, 136], "data": [32, 41, 50, 52, 53, 74, 77, 88, 89, 90, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 132, 133, 138, 141, 142, 143, 145, 147, 149, 151], "perturb": 32, "taken": [32, 148], "shape": [32, 88, 89], "therefor": [32, 77, 86, 94, 102, 139, 140], "singl": [33, 36, 37, 55, 56, 64, 74, 80, 94, 102, 135, 136], "lower_bound": [34, 35, 54, 57, 64, 68, 70, 83], "upper_bound": [34, 35, 54, 57, 64, 68, 70, 83], "variabl": [34, 54, 68, 70, 83, 130, 141, 148], "inf": [35, 57, 64, 68], "scale": [35, 89, 97, 98, 109, 123, 125], "offset": [35, 41, 64, 77], "ordin": 38, "profil": [40, 57, 68, 71, 72, 73, 78, 79, 104, 126, 136, 137, 140, 143, 149], "repeat": [40, 68, 71, 73, 134, 149], "resolut": [40, 71, 73], "coerc": 40, "numpi": [40, 86, 92, 93, 117, 118, 126, 136, 148], "datafram": [41, 95, 126, 139, 143, 149], "timestep_offset": [41, 77], "automat": [41, 139, 142, 143, 148], "align": [41, 77, 146], "resampl": [41, 77, 94, 102, 139], "_core": [41, 143], "forward": [41, 77], "backward": [41, 77], "dataset": [41, 77, 139], "bound": [41, 47, 54, 57, 64, 67, 68, 70, 77, 83, 94, 102, 114, 130, 134], "track": [42, 46, 75, 98, 113, 125, 139], "deficit": [42, 108, 126], "littl": [42, 141], "unusu": 42, "calc_valu": 42, "numpyarraynoderecord": [42, 107, 108, 110, 151], "request": [42, 145, 148], "you": [42, 139, 143, 145, 148, 150], "yesterdai": 42, "base_year": 43, "discount": 43, "discount_r": 43, "express": 43, "numer": [44, 117, 139], "denomin": 44, "divid": 44, "divisor": 44, "dividend": 44, "initial_valu": [46, 69], "befor": [46, 94, 102, 132, 139, 141, 142, 148], "past": 46, "keep": [46, 148], "though": [46, 75], "target": [47, 78, 92, 94], "water_elevation_paramet": [47, 95, 124], "turbine_elev": [47, 95, 124], "effici": [47, 55, 56, 64, 95, 124, 140], "densiti": [47, 94, 95, 102, 124], "1000": [47, 95, 124, 149], "min_head": 47, "flow_unit_convers": [47, 95, 124], "energy_unit_convers": [47, 95, 124], "1e": [47, 95, 124], "hydropow": [47, 95, 124, 126], "turbin": [47, 95, 124], "energi": [47, 95, 124], "elev": [47, 95, 124], "enter": [47, 95, 124], "work": [47, 95, 124, 135, 139, 140, 143, 148, 149], "head": [47, 95, 124], "upper": [47, 52, 54, 57, 64, 68, 70, 84, 92, 94, 102, 114, 134], "least": [47, 148], "water_elev": [47, 95, 124], "transform": [47, 95, 124], "compat": [47, 95, 124], "equat": [47, 95, 124, 140], "here": [47, 95, 124], "convert": [47, 49, 82, 84, 95, 124, 143], "m": [47, 95, 124], "mj": [47, 95, 124], "totalhydroenergyrecord": [47, 95], "hydropowerrecord": [47, 124], "invers": 47, "q": [47, 95, 124], "frac": 47, "p": [47, 95, 124, 140], "rho": [47, 95, 124], "h": [47, 95, 124, 143, 150], "those": [47, 68], "simpli": [47, 95, 124], "indexedarrayparamet": 48, "controlcurveindexparamet": [48, 140], "index_paramet": [49, 140], "param": [49, 66, 87, 96, 98, 104, 105, 111, 113, 116, 125, 140], "demand": [49, 135, 136, 137, 138, 142, 146, 147, 149, 151], "save": [49, 90, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 124, 139, 142], "constantparamet": [49, 82, 83, 84, 136, 143], "interp_kwarg": [50, 51, 52, 53], "interpol": [50, 51, 52, 53, 57, 68, 74, 82, 84, 126], "calucul": 50, "coordin": [50, 52, 53], "y": [50, 51, 52, 53, 67, 143], "dict": [50, 52, 53, 68, 86, 120], "dictionari": [50, 52, 53, 68, 86], "scipi": [50, 52, 53, 68, 86, 148], "interp1d": [50, 52, 53], "upper_paramet": 52, "lower_paramet": 52, "quadratur": 52, "interv": [52, 54, 151], "integr": [52, 67, 125], "file": [53, 77, 90, 92, 120, 126, 139, 148, 149], "max_output": [54, 70], "growth_rat": 54, "logist": 54, "growth": 54, "steep": 54, "aggregatedparamet": [55, 56, 64, 136, 140, 143], "interp_dai": 57, "monthli": [57, 72, 140, 149], "piecewis": [57, 67], "linearli": [57, 82, 84], "everi": [57, 68, 78, 120, 133, 143], "undertaken": [57, 68, 114, 134], "scenariomonthlyprofileparamet": 57, "arrayindexedscenariomonthlyfactorsparamet": [57, 72], "use_max_flow": [58, 59], "against": [58, 59, 88, 92, 137], "abstractnod": [58, 63, 66, 92, 93, 101, 109, 117], "is_vari": [65, 83], "right": 67, "hand": [67, 149], "days_of_year": 68, "rbf_kwarg": 68, "variable_days_of_year_rang": 68, "min_valu": 68, "max_valu": 68, "radial": 68, "basi": [68, 85], "rbf": 68, "comput": [68, 86, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "alongsid": 68, "366th": 68, "second": [68, 71, 73, 77, 83, 84, 120], "penultim": 68, "mirror": 68, "encourag": 68, "gradient": 68, "appear": [68, 142], "pleas": [68, 86, 150], "inform": [68, 105, 109, 111, 112, 114, 137, 138, 149, 151], "expos": 68, "except": [68, 72, 120, 133, 140, 141, 143, 149], "cap": 68, "infin": 68, "min_output": 70, "ramp": 70, "member": [71, 73], "1st": [71, 73, 88, 149], "dimens": [71, 73, 86, 92], "monthlyprofileparamet": [72, 82, 84, 143], "weekli": [73, 79, 139], "52": [73, 79], "switch": [74, 75, 140], "awar": 74, "explicitli": [74, 143, 151], "support": [74, 86, 92, 93, 117, 118, 138], "test": [74, 141, 147, 149], "definit": [74, 86, 114, 135, 139], "select": 74, "use_proportional_volum": 75, "abstractstorag": [75, 76, 80, 118, 119], "boolean": 75, "h5file": [77, 120], "pytabl": [77, 120, 139, 148], "hdf": 77, "databas": [77, 120], "interfac": [77, 141], "load": [77, 92, 139, 141, 142, 143, 147, 151], "entir": [77, 141], "memori": [77, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 132, 143], "tabl": [77, 120, 138], "filenam": [77, 120, 133, 139], "handl": [77, 120, 136, 147], "carrai": [77, 120], "open": [77, 120, 139], "close": [77, 120], "path": [77, 90, 120, 148, 149], "residual_dai": 78, "uniformli": 78, "annualvirtualstorag": 78, "perfect": 78, "averag": 78, "subsequ": 78, "afterward": 78, "reli": 80, "contain": [80, 86, 129, 133, 137, 142, 149], "queri": [80, 83, 143], "holder": 81, "three": [82, 135, 136, 139, 140, 142, 149], "100": [82, 83, 92, 93, 94, 117, 118, 135, 139, 151], "often": [82, 84, 137, 139, 140, 149], "dailyprofileparamet": [82, 84], "len": [82, 84, 143], "relat": [82, 140], "50": [82, 135, 140, 149], "30": [82, 135, 139, 148], "10": [82, 135, 139, 140, 149, 150, 151], "20": [82, 135, 139, 149], "cc": 82, "variable_indic": 83, "multi": 83, "rel": [83, 120, 149], "predefin": 83, "sequenc": 83, "increment": 83, "thereof": [83, 120, 142], "cast": 83, "descend": [83, 131, 132], "order": [83, 92, 137, 139, 140, 143, 149, 151], "wai": [83, 137, 139, 142, 143, 148], "consid": [83, 84, 142, 145, 150], "self": [83, 107, 108, 110, 133, 142, 143, 149], "basecontrolcurveparamet": 83, "pair": [84, 149], "next": [84, 142, 151], "2d": [84, 86], "bottom": 84, "top": [84, 140], "produc": [85, 94, 102, 139], "complex": [85, 135, 136, 137, 141, 142, 143], "unaggreg": 85, "recorder_agg_func": 85, "undertak": 85, "aggregated_valu": [85, 94, 102, 114], "call": [85, 114, 136, 141, 143, 149], "func": [86, 136], "util": [86, 126, 147], "etc": [86, 137], "custom": [86, 138, 140, 141, 145], "median": [86, 103, 105, 106, 107, 108, 109, 110, 111, 112, 138], "count_nonzero": 86, "map": 86, "kei": [86, 137, 139, 149], "aforement": 86, "percentil": [86, 92, 93, 117, 118, 136], "percentileofscor": 86, "score": 86, "1d": 86, "axi": [86, 92, 93, 117, 118], "determin": [86, 114, 139, 140], "fashion": [86, 145], "95": [86, 140], "kind": [86, 136, 139], "rank": 86, "unicod": [88, 89], "count": [88, 121], "exce": [88, 121, 135, 151], "also": [88, 120, 135, 137, 139, 143, 148, 149], "exclus": 88, "inclus": 88, "calendar": 88, "exceed": 88, "intersect": 88, "exclud": 88, "exclude_month": 88, "include_from_month": 88, "include_from_dai": 88, "jan": [88, 139], "include_to_month": 88, "include_to_dai": 88, "31st": [88, 149], "dec": [88, 139], "csvfile": 90, "complib": 90, "complevel": 90, "csv": [90, 149], "packag": [90, 147], "python": [90, 133, 136, 139, 140, 141, 143, 145, 147, 148, 149, 150], "standard": [90, 148], "librari": [90, 143, 145, 148], "writer": 90, "failur": [91, 140], "meet": 91, "lower_target_fdc": 92, "upper_target_fdc": 92, "durat": [92, 93, 117, 118, 126], "fdc": [92, 93, 117, 118], "deviat": 92, "2nd": 92, "high": 92, "low": 92, "fall": [92, 99], "extern": [92, 114, 138, 143, 147, 148, 149], "style": [92, 93, 117, 118], "fdc_agg_func": [92, 93, 117], "fit": [94, 102, 130, 150], "kde": [94, 102], "numpyarraystoragerecord": 94, "kernel": [94, 102], "estim": [94, 102], "probabl": [94, 102], "flatten": [94, 102], "pdf": [94, 102, 140], "to_datafram": [94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "reflect": [94, 102], "bounded": [94, 102], "disabl": [94, 102, 114], "resample_freq": [94, 102], "resample_func": [94, 102], "target_volume_pc": 94, "num_pdf": [94, 102], "101": [94, 102], "use_reflect": [94, 102], "whether": [94, 99, 102, 112, 114, 125, 136], "account": [94, 102], "power": [95, 124, 126], "hydrpow": 95, "hydropowertargetparamet": [95, 124], "numpyarraynormalisedstoragerecord": 102, "store": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 132, 139, 142, 143], "view": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 133], "temporal_agg_func": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "encount": 104, "rbfprofileparamet": 104, "might": [104, 139], "With": 104, "easili": 104, "curtail": 107, "numpyarraynodedeficitrecord": [107, 109, 110], "numpyarraynodesuppliedratiorecord": [107, 108, 109], "curtailment_ratio": 107, "actual_flow": [107, 108, 110], "numpyarraynodecurtailmentratiorecord": [108, 109, 110], "alloc": [108, 133, 137, 143, 147], "supply_ratio": 110, "ignore_nan": 114, "is_object": 114, "epsilon": [114, 134], "constraint_lower_bound": 114, "constraint_upper_bound": 114, "compon": [114, 136, 140, 149], "basic": [114, 138, 142, 145, 149], "comment": 114, "descript": [114, 149], "flag": [114, 148], "nan": [114, 141], "maxim": [114, 146], "maximis": 114, "minim": [114, 141, 143, 147], "minimis": 114, "denot": 114, "direct": [114, 143, 149], "distanc": 114, "algorithm": [114, 134, 139], "mark": 114, "is_constraint": 114, "strictli": 114, "wrapper": [114, 133], "tool": 114, "problem": [114, 133, 143, 147, 149, 151], "window": [116, 147], "season": 117, "sdc_agg_func": 118, "routes_flow": 120, "constructor": 120, "statist": [120, 126], "tupl": 120, "prefer": [120, 149], "insid": [120, 149], "filter_kwd": 120, "filter": 120, "open_fil": 120, "mode": [120, 148], "w": 120, "metadata": [120, 147, 151], "root": 120, "_v_attr": 120, "create_directori": 120, "attempt": [120, 141, 146], "make": [120, 142], "intermedi": [120, 149], "directori": [120, 148, 149], "o": [120, 147], "makedir": 120, "underneath": 120, "rather": [124, 139, 140, 148], "flux": 125, "summat": 125, "submodul": 126, "platypu": 126, "pygmo": 126, "modul": [126, 129, 139, 143, 149], "content": [126, 147, 149], "hdf5": [126, 139], "hydro": 126, "cython_glpk": 126, "cython_lpsolv": 126, "notebook": [126, 147], "bisect": 126, "search": [126, 149], "river": [128, 142, 149], "visualis": 129, "pywr": [129, 131, 132, 137, 139, 140, 141, 146, 149, 150, 151], "juyter": 129, "pygmowrapp": 130, "pywr_model_json": 130, "baseoptimisationwrapp": 130, "solut": [130, 134, 135, 148], "get_bound": 130, "get_nec": 130, "get_nic": 130, "get_nobj": 130, "helper": [130, 133], "customise_model": 130, "make_model": 130, "model_constraint": 130, "model_object": 130, "model_variable_map": 130, "model_vari": 130, "modelcach": 130, "cache_constraint": 130, "cache_object": 130, "cache_variable_paramet": 130, "clear_global_model_cach": 130, "clear": 130, "cach": [130, 133], "common": [131, 132, 136, 137, 139, 140, 142, 149], "destroi": 132, "abstractnodedata": 133, "id": 133, "in_edg": 133, "is_link": 133, "out_edg": 133, "row": 133, "aggnodefactordata": 133, "ind_ptr": 133, "memoryview": 133, "ind": 133, "node_ind": 133, "val": 133, "basismanag": 133, "cythonglpkedgesolv": 133, "use_presolv": 133, "time_limit": 133, "iteration_limit": 133, "message_level": 133, "error": [133, 134, 142, 143, 147], "save_routes_flow": 133, "retry_solv": 133, "glpksolver": 133, "route_flows_arr": 133, "setup": [133, 136, 139, 148], "stat": 133, "cythonglpksolv": 133, "glpkerror": [133, 141], "glpkinternalerror": [133, 141], "set_fixed_flows_onc": 133, "set_fixed_costs_onc": 133, "set_fixed_factors_onc": 133, "use_unsafe_api": [133, 141], "dump_glpk": 133, "dump_lp": 133, "dump_mp": 133, "set_solver_opt": 133, "baseclass": 133, "programm": [133, 141, 142, 143, 146], "glpk": [133, 147, 148, 149], "lpsolve55": 133, "cython": [133, 148], "get": [133, 143, 148, 149, 151], "metaclass": [133, 142], "magic": 133, "routes_flows_arrai": 133, "nullsolv": 133, "null": 133, "routin": 133, "mainli": 133, "debug": [133, 141, 147], "purpos": [133, 143, 150], "bisectionsearchmodel": 134, "find": 134, "largest": 134, "satisfi": [134, 135, 151], "proce": 134, "gap": 134, "best": 134, "feasibl": 134, "re": [134, 139, 140, 141], "ensur": [134, 135, 141, 143], "found": [134, 136, 149], "rais": [134, 139, 141, 142, 143, 149], "bisect_paramet": 134, "process": [134, 139, 141], "double_s": 134, "bisect_epsilon": 134, "termin": 134, "criterion": 134, "narrow": 134, "error_on_infeas": 134, "valueerror": [134, 149], "special": [135, 142, 148], "group": [135, 136], "possibli": 135, "conform": 135, "blend": 135, "sourc": [135, 139, 140, 147], "40": 135, "despit": 135, "There": [135, 136, 142, 143, 148, 149], "regardless": 135, "referenc": [135, 139, 142, 149], "liter": 135, "scheme": 135, "licens": [135, 147], "60": 135, "could": [135, 136, 141, 142, 143, 151], "hard": 135, "sometim": [135, 149], "unintend": 135, "aggregatedindexparamet": 136, "children": [136, 143], "while": [136, 143, 151], "januari": [136, 149], "8": [136, 139, 140], "4": [136, 139, 149], "monthlyparamet": 136, "agg": 136, "json": [136, 139, 142, 143, 147, 151], "section": [136, 137, 139, 140, 145, 149, 150, 151], "104": 136, "monthly_demand_profil": 136, "demand_saving_factor": 136, "build": [136, 141, 148], "detail": [136, 149, 150], "explan": [136, 143], "equival": [136, 140, 143], "truthi": 136, "api": [136, 147, 149], "25th": 136, "lambda": [136, 139], "25": [136, 139], "shorter": 136, "arguabl": 136, "readabl": 136, "quicker": 136, "another_paramet": 136, "gain": 136, "evapor": 136, "leakag": [136, 142], "origin": 136, "achiev": [136, 139], "shown": [136, 139, 141], "pattern": 136, "enough": 136, "warrant": 136, "creation": 136, "negativemax": 136, "import": [137, 139, 142, 143, 148, 149, 151], "applic": [137, 139], "parameteris": 137, "rule": [137, 142], "we": [137, 142, 151], "discuss": [137, 149], "strategi": 137, "veri": [137, 139, 141, 143, 151], "resourc": [137, 140, 142, 147, 150], "said": [137, 143], "advantag": 137, "condit": [137, 139], "Such": 137, "capabl": 137, "respond": 137, "futur": [137, 143], "few": [137, 143], "system": [137, 139, 140, 142], "progress": 137, "tbc": [137, 144], "extend": [137, 147], "format": [138, 142, 143, 147, 151], "usag": 138, "maxparamet": 138, "minparamet": 138, "negativeparamet": 138, "negativemaxparamet": 138, "concept": [138, 140], "practic": [139, 143], "desir": 139, "particularli": 139, "better": 139, "tabular": 139, "url": [139, 149], "comma": [139, 149], "excel": 139, "xl": 139, "xlsx": 139, "h5": 139, "warn": 139, "formula": 139, "recommend": [139, 141, 148], "superior": 139, "speed": 139, "to_hdf": 139, "critic": 139, "advis": 139, "tablesarrayparamet": 139, "fast": [139, 147], "indirectli": 139, "appropri": [139, 149], "read_xxx": 139, "read_excel": 139, "recognis": 139, "pars": [139, 149], "timestamp": 139, "parse_d": [139, 149], "comparison": 139, "git": [139, 148], "suitabl": 139, "binari": [139, 147], "obtain": 139, "revis": 139, "becom": 139, "problemat": 139, "To": [139, 140, 142, 143, 148], "address": 139, "dataframeparamet": 139, "show": [139, 143], "how": [139, 140, 151], "local": 139, "match": [139, 143], "hashmismatcherror": 139, "hashlib": 139, "usual": [139, 140, 143], "suffici": [139, 142, 149], "timeseries2": 139, "md5": 139, "a5c4032e2d8f5205ca99dedcfa4cd18": 139, "sha256": 139, "0f75b3cee325d37112687d3d10596f44e0add374f4e40a1b6687912c05e65366": 139, "author": [139, 149], "add": [139, 142, 143, 148, 151], "script": [139, 148], "rb": 139, "block": 139, "8192": 139, "print": [139, 149, 151], "hexdigest": 139, "catchment": [139, 142], "column": [139, 149], "rainfal": 139, "1910": 139, "01": [139, 149, 151], "23": [139, 149], "920": 139, "02": 139, "22": 139, "140": 139, "03": 139, "570": 139, "index_col": [139, 149], "still": [139, 148, 151], "subsampl": 139, "go": 139, "theme": 139, "popul": 139, "citi": 139, "real": [139, 141], "oxford": 139, "294": 139, "cambridg": 139, "28": 139, "403": 139, "19": [139, 150], "london": 139, "790": 139, "930": 139, "520": 139, "lookup": 139, "max_flow_oxford": 139, "plu": 139, "feb": 139, "mar": 139, "43": 139, "32": 139, "24": 139, "21": 139, "11": 139, "14": 139, "34": 139, "13": 139, "monthlyprofil": [139, 140, 149], "200": [139, 149], "dc1": 139, "reload": 139, "disk": 139, "although": [139, 148], "previous": 139, "oxford_demand": 139, "simple_data": 139, "cambridge_demand": 139, "poor": 140, "impos": 140, "likelihood": 140, "d_": 140, "code": [140, 148, 149], "snippet": 140, "demand_baselin": 140, "throughout": 140, "august": 140, "2x": 140, "rest": [140, 142], "9x": 140, "hat": 140, "illustr": [140, 142], "demand_profil": 140, "png": 140, "hire": 140, "l1": 140, "perhap": 140, "just": [140, 143], "public": [140, 150], "l2": 140, "decim": 140, "strateg": 140, "implicitli": 140, "l0": 140, "central": 140, "80": 140, "commonli": 140, "complic": [140, 149], "summer": 140, "winter": 140, "demand_restriction_level": 140, "controlcurveindex": 140, "level1": 140, "level2": 140, "reduct": 140, "elsewher": 140, "further": [140, 151], "75": 140, "demand_restriction_factor": 140, "indexedarrai": 140, "understand": 140, "help": 140, "demand_factor": 140, "demand_max_flow": 140, "figur": 140, "500": 140, "ok": 140, "share": 140, "translat": [141, 149], "sensibl": 141, "check": [141, 151], "uncheck": 141, "sinc": 141, "v1": 141, "enabl": 141, "caught": 141, "gracefulli": 141, "invalid": 141, "environ": [141, 148], "difficult": 141, "recov": 141, "ideal": 141, "catch": 141, "continu": 141, "runtim": [141, 143, 148], "benchmark": 141, "random": 141, "world": 141, "context": 141, "been": [141, 142, 143, 148, 151], "without": [141, 142, 143, 150], "pywr_solver_glpk_unsafe_api": 141, "assertionerror": 141, "segment": 141, "fault": 141, "major": 142, "categori": 142, "exist": [142, 143, 145], "featur": 142, "characteris": 142, "abil": 142, "fundament": [142, 149], "fourth": 142, "balanc": [142, 146], "carri": 142, "manag": [142, 148], "arrang": 142, "out_1": 142, "receiv": [142, 150, 151], "in_1": 142, "convei": 142, "parallel": 142, "lnk_1": 142, "lnk_n": 142, "let": [142, 151], "leaki": 142, "leak": 142, "flaw": 142, "proportion": 142, "leakypip": 142, "def": [142, 143], "leakage_cost": 142, "99999": 142, "allow_isol": 142, "super": [142, 143], "parent": [142, 143], "iter_slot": 142, "is_connector": 142, "yield": 142, "_after_": 142, "commit_al": 142, "sure": 142, "classmethod": [142, 143], "cl": [142, 143], "del": 142, "pop": [142, 143], "regist": [142, 143], "leaky_pipe_model": 142, "sjon": 142, "doesn": [142, 151], "advanc": 142, "treatment": 142, "write": [143, 145, 149, 150], "minimim": 143, "dynam": 143, "_valu": 143, "whenev": 143, "myparamet": 143, "overload": 143, "word": 143, "123": 143, "element": 143, "dataclass": 143, "rememb": 143, "good": [143, 148], "mind": 143, "aren": 143, "rewrit": 143, "anyth": [143, 151], "simplist": 143, "finit": 143, "licenceparamet": 143, "total_volum": 143, "num_scenario": 143, "_volume_remain": 143, "empti": [143, 151], "float64": 143, "timestepp": [143, 147, 151], "flow_during_timestep": 143, "_node": 143, "dirti": 143, "realloc": 143, "tree": 143, "correct": [143, 148], "circular": 143, "terminologi": 143, "get_valu": 143, "get_index": 143, "manual": [143, 148], "load_paramet": 143, "nest": 143, "simplifi": 143, "sumparamet": 143, "total_valu": 143, "parameter_data": 143, "indirect": 143, "unabl": 143, "resolv": 143, "signific": 143, "written": [143, 147, 148], "too": 143, "tutori": [143, 147], "scope": 143, "easiest": [143, 148], "compil": [143, 148], "pyximport": 143, "command": [143, 148], "pyx": 143, "foreign": 143, "py": [143, 148, 149], "linker": 143, "demonstr": [143, 149], "pow": 143, "libm": 143, "cimport": 143, "statement": 143, "_paramet": 143, "cpdef": 143, "signatur": 143, "custom_paramet": 143, "cdef": 143, "math": 143, "squaredparamet": 143, "run_model": 143, "instal": [143, 147], "design": 145, "orient": 145, "much": 145, "own": 145, "project": [145, 148], "guidanc": 145, "your": [145, 148, 150], "potenti": 145, "pull": [145, 148], "frame": 146, "text": [146, 150], "mathbf": 146, "mathrm": 146, "subject": 146, "leq": 146, "generalis": 147, "free": [147, 150], "wheel": 147, "pip": 147, "anaconda": 147, "linux": 147, "develop": 147, "formul": 147, "overview": 147, "syntax": 147, "footnot": 147, "older": 147, "cookbook": 147, "softwar": 147, "citat": 147, "later": [148, 150], "built": 148, "successfulli": 148, "msvc": 148, "gcc": 148, "clang": 148, "llvm": 148, "instruct": 148, "networkx": 148, "program": [148, 150], "lpsolv": 148, "xlrd": 148, "pytest": 148, "jupyt": 148, "matplotlib": 148, "plan": 148, "host": 148, "pypi": 148, "64": 148, "bit": 148, "lag": 148, "behind": 148, "configur": 148, "proceed": 148, "conda": 148, "minut": 148, "drive": 148, "forg": 148, "channel": 148, "config": 148, "want": 148, "locat": 148, "relev": 148, "batch": 148, "maco": 148, "conda_prefix": 148, "library_inc": 148, "library_lib": 148, "lib": [148, 149], "build_ext": 148, "l": 148, "inplac": 148, "blog": 148, "winglpk": 148, "yourself": 148, "prebuilt": 148, "fine": 148, "sourceforg": 148, "websit": 148, "No": 148, "sudo": 148, "apt": 148, "libgmp3": 148, "dev": 148, "libglpk": 148, "liblpsolve55": 148, "static": 148, "confus": 148, "around": 148, "rm": 148, "usr": 148, "ln": 148, "lp_solv": 148, "dyld_library_path": 148, "export": 148, "rpath": 148, "cflag": 148, "wl": 148, "header": 148, "c_include_path": 148, "seen": 148, "recip": 148, "sh": 148, "homebrew": 148, "github": 148, "http": [148, 150], "com": 148, "avaialbl": 148, "pywr_solv": 148, "travi": 148, "ci": 148, "appveyor": 148, "org": [148, 150], "admin": 148, "servic": 148, "programmat": 149, "javascript": 149, "notat": 149, "overal": 149, "folder": 149, "titl": [149, 151], "addition": 149, "john": 149, "smith": 149, "2016": 149, "decemb": 149, "scalar": 149, "subtyp": 149, "groundwat": 149, "soft": 149, "associ": 149, "teddington": 149, "rivergaug": 149, "well": 149, "wherea": 149, "big": 149, "wet": 149, "lake": 149, "700": 149, "reservoira": 149, "reservoirb": 149, "gw_flow": 149, "mrf_profil": 149, "inlin": 149, "catchment_inflow": 149, "catchmod_outputs_v2": 149, "my_model": 149, "thame": 149, "Not": 149, "try": 149, "twice": 149, "keyerror": 149, "membership": 149, "assert": 149, "sensit": 149, "white": 149, "space": 149, "quit": 149, "strict": 149, "fail": 149, "somewhat": 149, "cryptic": 149, "usefulli": 149, "line": 149, "traceback": 149, "recent": 149, "stdin": 149, "snorf": 149, "desktop": 149, "316": 149, "miniconda3": 149, "env": 149, "python3": 149, "318": 149, "_default_decod": 149, "decod": 149, "343": 149, "obj": 149, "raw_decod": 149, "idx": 149, "_w": 149, "359": 149, "scan_onc": 149, "enclos": 149, "quot": 149, "char": 149, "372": 149, "mistak": 149, "trail": 149, "fact": 149, "hierarchi": 149, "yaml": 149, "yet": 149, "markup": 149, "languag": 149, "losslessli": 149, "under": 150, "gnu": 150, "copyright": 150, "2014": 150, "joshua": 150, "arnott": 150, "jame": 150, "tomlinson": 150, "atkin": 150, "univers": 150, "manchest": 150, "redistribut": 150, "publish": 150, "foundat": 150, "hope": 150, "warranti": 150, "impli": 150, "merchant": 150, "FOR": 150, "copi": 150, "along": 150, "inc": 150, "franklin": 150, "street": 150, "fifth": 150, "floor": 150, "boston": 150, "ma": 150, "02110": 150, "1301": 150, "usa": 150, "permiss": 150, "grant": 150, "invari": 150, "front": 150, "cover": 150, "back": 150, "entitl": 150, "cite": 150, "paper": 150, "j": 150, "harou": 150, "2020": 150, "environment": 150, "doi": 150, "1016": 150, "envsoft": 150, "104635": 150, "simplest": 151, "technic": 151, "isn": 151, "interest": 151, "haven": 151, "don": 151, "miss": 151, "ve": 151, "tell": 151, "long": 151, "ll": 151, "2015": 151, "datetim": 151, "to_datetim": 151, "timedelta": 151, "captur": 151, "readi": 151, "our": 151, "parti": 151, "trivial": 151, "minimum_vers": 151, "forest": 151}, "objects": {"pywr.core": [[0, 0, 1, "", "Scenario"], [1, 0, 1, "", "ScenarioCollection"], [2, 0, 1, "", "ScenarioIndex"], [3, 0, 1, "", "Timestep"]], "pywr.core.Scenario": [[0, 1, 1, "", "__init__"]], "pywr.core.ScenarioCollection": [[1, 1, 1, "", "__init__"]], "pywr.core.ScenarioIndex": [[2, 1, 1, "", "__init__"]], "pywr.core.Timestep": [[3, 1, 1, "", "__init__"]], "pywr.domains.river": [[4, 0, 1, "", "Catchment"], [5, 0, 1, "", "Reservoir"], [6, 0, 1, "", "River"], [7, 0, 1, "", "RiverGauge"], [8, 0, 1, "", "RiverSplit"], [9, 0, 1, "", "RiverSplitWithGauge"]], "pywr.domains.river.Catchment": [[4, 1, 1, "", "__init__"]], "pywr.domains.river.Reservoir": [[5, 1, 1, "", "__init__"]], "pywr.domains.river.River": [[6, 1, 1, "", "__init__"]], "pywr.domains.river.RiverGauge": [[7, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplit": [[8, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplitWithGauge": [[9, 1, 1, "", "__init__"]], "pywr.nodes": [[10, 0, 1, "", "AggregatedNode"], [11, 0, 1, "", "AggregatedStorage"], [12, 0, 1, "", "AnnualVirtualStorage"], [13, 0, 1, "", "BreakLink"], [14, 0, 1, "", "DelayNode"], [15, 0, 1, "", "Input"], [16, 0, 1, "", "Link"], [17, 0, 1, "", "LossLink"], [18, 0, 1, "", "MonthlyVirtualStorage"], [19, 0, 1, "", "MultiSplitLink"], [20, 0, 1, "", "Node"], [21, 0, 1, "", "Output"], [22, 0, 1, "", "PiecewiseLink"], [23, 0, 1, "", "RollingVirtualStorage"], [24, 0, 1, "", "SeasonalVirtualStorage"], [25, 0, 1, "", "Storage"], [26, 0, 1, "", "VirtualStorage"]], "pywr.nodes.AggregatedNode": [[10, 1, 1, "", "__init__"]], "pywr.nodes.AggregatedStorage": [[11, 1, 1, "", "__init__"]], "pywr.nodes.AnnualVirtualStorage": [[12, 1, 1, "", "__init__"]], "pywr.nodes.BreakLink": [[13, 1, 1, "", "__init__"]], "pywr.nodes.DelayNode": [[14, 1, 1, "", "__init__"]], "pywr.nodes.Input": [[15, 1, 1, "", "__init__"]], "pywr.nodes.Link": [[16, 1, 1, "", "__init__"]], "pywr.nodes.LossLink": [[17, 1, 1, "", "__init__"]], "pywr.nodes.MonthlyVirtualStorage": [[18, 1, 1, "", "__init__"]], "pywr.nodes.MultiSplitLink": [[19, 1, 1, "", "__init__"]], "pywr.nodes.Node": [[20, 1, 1, "", "__init__"]], "pywr.nodes.Output": [[21, 1, 1, "", "__init__"]], "pywr.nodes.PiecewiseLink": [[22, 1, 1, "", "__init__"]], "pywr.nodes.RollingVirtualStorage": [[23, 1, 1, "", "__init__"]], "pywr.nodes.SeasonalVirtualStorage": [[24, 1, 1, "", "__init__"]], "pywr.nodes.Storage": [[25, 1, 1, "", "__init__"]], "pywr.nodes.VirtualStorage": [[26, 1, 1, "", "__init__"]], "pywr": [[130, 2, 0, "-", "optimisation"], [133, 2, 0, "-", "solvers"]], "pywr.optimisation": [[130, 0, 1, "", "BaseOptimisationWrapper"], [130, 0, 1, "", "ModelCache"], [130, 4, 1, "", "cache_constraints"], [130, 4, 1, "", "cache_objectives"], [130, 4, 1, "", "cache_variable_parameters"], [130, 4, 1, "", "clear_global_model_cache"], [130, 2, 0, "-", "pygmo"]], "pywr.optimisation.BaseOptimisationWrapper": [[130, 1, 1, "", "customise_model"], [130, 1, 1, "", "make_model"], [130, 3, 1, "", "model"], [130, 3, 1, "", "model_constraints"], [130, 3, 1, "", "model_objectives"], [130, 3, 1, "", "model_variable_map"], [130, 3, 1, "", "model_variables"]], "pywr.optimisation.pygmo": [[130, 0, 1, "", "PygmoWrapper"]], "pywr.optimisation.pygmo.PygmoWrapper": [[130, 1, 1, "", "fitness"], [130, 1, 1, "", "get_bounds"], [130, 1, 1, "", "get_nec"], [130, 1, 1, "", "get_nic"], [130, 1, 1, "", "get_nobj"]], "pywr.parameters": [[27, 0, 1, "", "AbstractThresholdParameter"], [28, 0, 1, "", "AggregatedIndexParameter"], [29, 0, 1, "", "AggregatedParameter"], [30, 0, 1, "", "AnnualHarmonicSeriesParameter"], [31, 0, 1, "", "ArrayIndexedParameter"], [32, 0, 1, "", "ArrayIndexedScenarioMonthlyFactorsParameter"], [33, 0, 1, "", "ArrayIndexedScenarioParameter"], [34, 0, 1, "", "BinaryStepParameter"], [35, 0, 1, "", "ConstantParameter"], [36, 0, 1, "", "ConstantScenarioIndexParameter"], [37, 0, 1, "", "ConstantScenarioParameter"], [38, 0, 1, "", "CurrentOrdinalDayThresholdParameter"], [39, 0, 1, "", "CurrentYearThresholdParameter"], [40, 0, 1, "", "DailyProfileParameter"], [41, 0, 1, "", "DataFrameParameter"], [42, 0, 1, "", "DeficitParameter"], [43, 0, 1, "", "DiscountFactorParameter"], [44, 0, 1, "", "DivisionParameter"], [45, 0, 1, "", "FlowDelayParameter"], [46, 0, 1, "", "FlowParameter"], [47, 0, 1, "", "HydropowerTargetParameter"], [48, 0, 1, "", "IndexParameter"], [49, 0, 1, "", "IndexedArrayParameter"], [50, 0, 1, "", "InterpolatedFlowParameter"], [51, 0, 1, "", "InterpolatedParameter"], [52, 0, 1, "", "InterpolatedQuadratureParameter"], [53, 0, 1, "", "InterpolatedVolumeParameter"], [54, 0, 1, "", "LogisticParameter"], [55, 0, 1, "", "MaxParameter"], [56, 0, 1, "", "MinParameter"], [57, 0, 1, "", "MonthlyProfileParameter"], [58, 0, 1, "", "MultipleThresholdIndexParameter"], [59, 0, 1, "", "MultipleThresholdParameterIndexParameter"], [60, 0, 1, "", "NegativeMaxParameter"], [61, 0, 1, "", "NegativeMinParameter"], [62, 0, 1, "", "NegativeParameter"], [63, 0, 1, "", "NodeThresholdParameter"], [64, 0, 1, "", "OffsetParameter"], [65, 0, 1, "", "Parameter"], [66, 0, 1, "", "ParameterThresholdParameter"], [67, 0, 1, "", "PiecewiseIntegralParameter"], [68, 0, 1, "", "RbfProfileParameter"], [69, 0, 1, "", "RecorderThresholdParameter"], [70, 0, 1, "", "RectifierParameter"], [71, 0, 1, "", "ScenarioDailyProfileParameter"], [72, 0, 1, "", "ScenarioMonthlyProfileParameter"], [73, 0, 1, "", "ScenarioWeeklyProfileParameter"], [74, 0, 1, "", "ScenarioWrapperParameter"], [75, 0, 1, "", "StorageParameter"], [76, 0, 1, "", "StorageThresholdParameter"], [77, 0, 1, "", "TablesArrayParameter"], [78, 0, 1, "", "UniformDrawdownProfileParameter"], [79, 0, 1, "", "WeeklyProfileParameter"]], "pywr.parameters.AbstractThresholdParameter": [[27, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedIndexParameter": [[28, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedParameter": [[29, 1, 1, "", "__init__"]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedParameter": [[31, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, 1, 1, "", "__init__"]], "pywr.parameters.BinaryStepParameter": [[34, 1, 1, "", "__init__"]], "pywr.parameters.ConstantParameter": [[35, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioParameter": [[37, 1, 1, "", "__init__"]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, 1, 1, "", "__init__"]], "pywr.parameters.CurrentYearThresholdParameter": [[39, 1, 1, "", "__init__"]], "pywr.parameters.DailyProfileParameter": [[40, 1, 1, "", "__init__"]], "pywr.parameters.DataFrameParameter": [[41, 1, 1, "", "__init__"]], "pywr.parameters.DeficitParameter": [[42, 1, 1, "", "__init__"]], "pywr.parameters.DiscountFactorParameter": [[43, 1, 1, "", "__init__"]], "pywr.parameters.DivisionParameter": [[44, 1, 1, "", "__init__"]], "pywr.parameters.FlowDelayParameter": [[45, 1, 1, "", "__init__"]], "pywr.parameters.FlowParameter": [[46, 1, 1, "", "__init__"]], "pywr.parameters.HydropowerTargetParameter": [[47, 1, 1, "", "__init__"]], "pywr.parameters.IndexParameter": [[48, 1, 1, "", "__init__"]], "pywr.parameters.IndexedArrayParameter": [[49, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedFlowParameter": [[50, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedParameter": [[51, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedVolumeParameter": [[53, 1, 1, "", "__init__"]], "pywr.parameters.LogisticParameter": [[54, 1, 1, "", "__init__"]], "pywr.parameters.MaxParameter": [[55, 1, 1, "", "__init__"]], "pywr.parameters.MinParameter": [[56, 1, 1, "", "__init__"]], "pywr.parameters.MonthlyProfileParameter": [[57, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMaxParameter": [[60, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMinParameter": [[61, 1, 1, "", "__init__"]], "pywr.parameters.NegativeParameter": [[62, 1, 1, "", "__init__"]], "pywr.parameters.NodeThresholdParameter": [[63, 1, 1, "", "__init__"]], "pywr.parameters.OffsetParameter": [[64, 1, 1, "", "__init__"]], "pywr.parameters.Parameter": [[65, 1, 1, "", "__init__"]], "pywr.parameters.ParameterThresholdParameter": [[66, 1, 1, "", "__init__"]], "pywr.parameters.PiecewiseIntegralParameter": [[67, 1, 1, "", "__init__"]], "pywr.parameters.RbfProfileParameter": [[68, 1, 1, "", "__init__"]], "pywr.parameters.RecorderThresholdParameter": [[69, 1, 1, "", "__init__"]], "pywr.parameters.RectifierParameter": [[70, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioDailyProfileParameter": [[71, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[72, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[73, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWrapperParameter": [[74, 1, 1, "", "__init__"]], "pywr.parameters.StorageParameter": [[75, 1, 1, "", "__init__"]], "pywr.parameters.StorageThresholdParameter": [[76, 1, 1, "", "__init__"]], "pywr.parameters.TablesArrayParameter": [[77, 1, 1, "", "__init__"]], "pywr.parameters.UniformDrawdownProfileParameter": [[78, 1, 1, "", "__init__"]], "pywr.parameters.WeeklyProfileParameter": [[79, 1, 1, "", "__init__"]], "pywr.parameters.control_curves": [[80, 0, 1, "", "BaseControlCurveParameter"], [81, 0, 1, "", "ControlCurveIndexParameter"], [82, 0, 1, "", "ControlCurveInterpolatedParameter"], [83, 0, 1, "", "ControlCurveParameter"], [84, 0, 1, "", "ControlCurvePiecewiseInterpolatedParameter"]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[80, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[81, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[82, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveParameter": [[83, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[84, 1, 1, "", "__init__"]], "pywr.recorders": [[85, 0, 1, "", "AggregatedRecorder"], [86, 0, 1, "", "Aggregator"], [87, 0, 1, "", "AnnualCountIndexParameterRecorder"], [88, 0, 1, "", "AnnualCountIndexThresholdRecorder"], [89, 0, 1, "", "AnnualTotalFlowRecorder"], [90, 0, 1, "", "CSVRecorder"], [91, 0, 1, "", "DeficitFrequencyNodeRecorder"], [92, 0, 1, "", "FlowDurationCurveDeviationRecorder"], [93, 0, 1, "", "FlowDurationCurveRecorder"], [94, 0, 1, "", "GaussianKDEStorageRecorder"], [95, 0, 1, "", "HydropowerRecorder"], [96, 0, 1, "", "IndexParameterRecorder"], [97, 0, 1, "", "MeanFlowNodeRecorder"], [98, 0, 1, "", "MeanParameterRecorder"], [99, 0, 1, "", "MinimumThresholdVolumeStorageRecorder"], [100, 0, 1, "", "MinimumVolumeStorageRecorder"], [101, 0, 1, "", "NodeRecorder"], [102, 0, 1, "", "NormalisedGaussianKDEStorageRecorder"], [103, 0, 1, "", "NumpyArrayAreaRecorder"], [104, 0, 1, "", "NumpyArrayDailyProfileParameterRecorder"], [105, 0, 1, "", "NumpyArrayIndexParameterRecorder"], [106, 0, 1, "", "NumpyArrayLevelRecorder"], [107, 0, 1, "", "NumpyArrayNodeCurtailmentRatioRecorder"], [108, 0, 1, "", "NumpyArrayNodeDeficitRecorder"], [109, 0, 1, "", "NumpyArrayNodeRecorder"], [110, 0, 1, "", "NumpyArrayNodeSuppliedRatioRecorder"], [111, 0, 1, "", "NumpyArrayParameterRecorder"], [112, 0, 1, "", "NumpyArrayStorageRecorder"], [113, 0, 1, "", "ParameterRecorder"], [114, 0, 1, "", "Recorder"], [115, 0, 1, "", "RollingMeanFlowNodeRecorder"], [116, 0, 1, "", "RollingWindowParameterRecorder"], [117, 0, 1, "", "SeasonalFlowDurationCurveRecorder"], [118, 0, 1, "", "StorageDurationCurveRecorder"], [119, 0, 1, "", "StorageRecorder"], [120, 0, 1, "", "TablesRecorder"], [121, 0, 1, "", "TimestepCountIndexParameterRecorder"], [122, 0, 1, "", "TotalDeficitNodeRecorder"], [123, 0, 1, "", "TotalFlowNodeRecorder"], [124, 0, 1, "", "TotalHydroEnergyRecorder"], [125, 0, 1, "", "TotalParameterRecorder"]], "pywr.recorders.AggregatedRecorder": [[85, 1, 1, "", "__init__"]], "pywr.recorders.Aggregator": [[86, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[87, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[88, 1, 1, "", "__init__"]], "pywr.recorders.AnnualTotalFlowRecorder": [[89, 1, 1, "", "__init__"]], "pywr.recorders.CSVRecorder": [[90, 1, 1, "", "__init__"]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[91, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[92, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveRecorder": [[93, 1, 1, "", "__init__"]], "pywr.recorders.GaussianKDEStorageRecorder": [[94, 1, 1, "", "__init__"]], "pywr.recorders.HydropowerRecorder": [[95, 1, 1, "", "__init__"]], "pywr.recorders.IndexParameterRecorder": [[96, 1, 1, "", "__init__"]], "pywr.recorders.MeanFlowNodeRecorder": [[97, 1, 1, "", "__init__"]], "pywr.recorders.MeanParameterRecorder": [[98, 1, 1, "", "__init__"]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[99, 1, 1, "", "__init__"]], "pywr.recorders.MinimumVolumeStorageRecorder": [[100, 1, 1, "", "__init__"]], "pywr.recorders.NodeRecorder": [[101, 1, 1, "", "__init__"]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[102, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayAreaRecorder": [[103, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[104, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[105, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayLevelRecorder": [[106, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[107, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[108, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeRecorder": [[109, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[110, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayParameterRecorder": [[111, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayStorageRecorder": [[112, 1, 1, "", "__init__"]], "pywr.recorders.ParameterRecorder": [[113, 1, 1, "", "__init__"]], "pywr.recorders.Recorder": [[114, 1, 1, "", "__init__"]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[115, 1, 1, "", "__init__"]], "pywr.recorders.RollingWindowParameterRecorder": [[116, 1, 1, "", "__init__"]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[117, 1, 1, "", "__init__"]], "pywr.recorders.StorageDurationCurveRecorder": [[118, 1, 1, "", "__init__"]], "pywr.recorders.StorageRecorder": [[119, 1, 1, "", "__init__"]], "pywr.recorders.TablesRecorder": [[120, 1, 1, "", "__init__"]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[121, 1, 1, "", "__init__"]], "pywr.recorders.TotalDeficitNodeRecorder": [[122, 1, 1, "", "__init__"]], "pywr.recorders.TotalFlowNodeRecorder": [[123, 1, 1, "", "__init__"]], "pywr.recorders.TotalHydroEnergyRecorder": [[124, 1, 1, "", "__init__"]], "pywr.recorders.TotalParameterRecorder": [[125, 1, 1, "", "__init__"]], "pywr.solvers": [[133, 0, 1, "", "CythonGLPKEdgeSolver"], [133, 0, 1, "", "CythonGLPKSolver"], [133, 0, 1, "", "NullSolver"], [133, 0, 1, "", "Solver"], [133, 2, 0, "-", "cython_glpk"]], "pywr.solvers.CythonGLPKEdgeSolver": [[133, 1, 1, "", "dump_glpk"], [133, 1, 1, "", "dump_lp"], [133, 1, 1, "", "dump_mps"], [133, 5, 1, "", "name"], [133, 1, 1, "", "reset"], [133, 3, 1, "", "retry_solve"], [133, 3, 1, "", "set_fixed_costs_once"], [133, 3, 1, "", "set_fixed_factors_once"], [133, 3, 1, "", "set_fixed_flows_once"], [133, 3, 1, "", "settings"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 3, 1, "", "stats"], [133, 3, 1, "", "use_presolve"], [133, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.CythonGLPKSolver": [[133, 1, 1, "", "dump_glpk"], [133, 1, 1, "", "dump_lp"], [133, 1, 1, "", "dump_mps"], [133, 5, 1, "", "name"], [133, 1, 1, "", "reset"], [133, 3, 1, "", "retry_solve"], [133, 3, 1, "", "routes"], [133, 3, 1, "", "routes_flows_array"], [133, 3, 1, "", "save_routes_flows"], [133, 3, 1, "", "set_fixed_costs_once"], [133, 3, 1, "", "set_fixed_factors_once"], [133, 3, 1, "", "set_fixed_flows_once"], [133, 3, 1, "", "settings"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 3, 1, "", "stats"], [133, 3, 1, "", "use_presolve"], [133, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.NullSolver": [[133, 5, 1, "", "name"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"]], "pywr.solvers.Solver": [[133, 5, 1, "", "name"], [133, 1, 1, "", "reset"], [133, 3, 1, "", "settings"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 3, 1, "", "stats"]], "pywr.solvers.cython_glpk": [[133, 0, 1, "", "AbstractNodeData"], [133, 0, 1, "", "AggNodeFactorData"], [133, 0, 1, "", "BasisManager"], [133, 0, 1, "", "CythonGLPKEdgeSolver"], [133, 0, 1, "", "CythonGLPKSolver"], [133, 6, 1, "", "GLPKError"], [133, 6, 1, "", "GLPKInternalError"], [133, 0, 1, "", "GLPKSolver"]], "pywr.solvers.cython_glpk.AbstractNodeData": [[133, 5, 1, "", "id"], [133, 5, 1, "", "in_edges"], [133, 5, 1, "", "is_link"], [133, 5, 1, "", "out_edges"], [133, 5, 1, "", "row"]], "pywr.solvers.cython_glpk.AggNodeFactorData": [[133, 5, 1, "", "ind_ptr"], [133, 5, 1, "", "inds"], [133, 5, 1, "", "node_ind"], [133, 5, 1, "", "row"], [133, 5, 1, "", "vals"]], "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver": [[133, 1, 1, "", "reset"], [133, 5, 1, "", "retry_solve"], [133, 5, 1, "", "route_flows_arr"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.CythonGLPKSolver": [[133, 1, 1, "", "reset"], [133, 5, 1, "", "retry_solve"], [133, 5, 1, "", "route_flows_arr"], [133, 5, 1, "", "routes"], [133, 5, 1, "", "save_routes_flows"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.GLPKSolver": [[133, 1, 1, "", "dump_glpk"], [133, 1, 1, "", "dump_lp"], [133, 1, 1, "", "dump_mps"], [133, 1, 1, "", "reset"], [133, 5, 1, "", "set_fixed_costs_once"], [133, 5, 1, "", "set_fixed_factors_once"], [133, 5, 1, "", "set_fixed_flows_once"], [133, 1, 1, "", "set_solver_options"], [133, 1, 1, "", "setup"], [133, 1, 1, "", "solve"], [133, 5, 1, "", "use_presolve"], [133, 5, 1, "", "use_unsafe_api"]], "pywr.utils": [[134, 2, 0, "-", "bisect"]], "pywr.utils.bisect": [[134, 0, 1, "", "BisectionSearchModel"]], "pywr.utils.bisect.BisectionSearchModel": [[134, 1, 1, "", "run"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"pywr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 133, 134, 138, 142, 143, 144, 145, 147, 148], "core": [0, 1, 2, 3, 127], "scenario": [0, 143], "scenariocollect": 1, "scenarioindex": 2, "timestep": [3, 143], "domain": [4, 5, 6, 7, 8, 9], "river": [4, 5, 6, 7, 8, 9], "catchment": 4, "reservoir": 5, "rivergaug": 7, "riversplit": 8, "riversplitwithgaug": 9, "node": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 128, 135, 142, 149], "aggregatednod": 10, "aggregatedstorag": 11, "annualvirtualstorag": 12, "breaklink": 13, "delaynod": 14, "input": 15, "link": 16, "losslink": 17, "monthlyvirtualstorag": 18, "multisplitlink": 19, "output": 21, "piecewiselink": 22, "rollingvirtualstorag": 23, "seasonalvirtualstorag": 24, "storag": [25, 137, 149], "virtualstorag": 26, "paramet": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 131, 136, 143, 149], "abstractthresholdparamet": 27, "aggregatedindexparamet": 28, "aggregatedparamet": 29, "annualharmonicseriesparamet": 30, "arrayindexedparamet": 31, "arrayindexedscenariomonthlyfactorsparamet": 32, "arrayindexedscenarioparamet": 33, "binarystepparamet": 34, "constantparamet": 35, "constantscenarioindexparamet": 36, "constantscenarioparamet": 37, "currentordinaldaythresholdparamet": 38, "currentyearthresholdparamet": 39, "dailyprofileparamet": 40, "dataframeparamet": 41, "deficitparamet": 42, "discountfactorparamet": 43, "divisionparamet": 44, "flowdelayparamet": 45, "flowparamet": 46, "hydropowertargetparamet": 47, "indexparamet": 48, "indexedarrayparamet": 49, "interpolatedflowparamet": 50, "interpolatedparamet": 51, "interpolatedquadratureparamet": 52, "interpolatedvolumeparamet": 53, "logisticparamet": 54, "maxparamet": [55, 136], "minparamet": [56, 136], "monthlyprofileparamet": 57, "multiplethresholdindexparamet": 58, "multiplethresholdparameterindexparamet": 59, "negativemaxparamet": [60, 136], "negativeminparamet": 61, "negativeparamet": [62, 136], "nodethresholdparamet": 63, "offsetparamet": 64, "parameterthresholdparamet": 66, "piecewiseintegralparamet": 67, "rbfprofileparamet": 68, "recorderthresholdparamet": 69, "rectifierparamet": 70, "scenariodailyprofileparamet": 71, "scenariomonthlyprofileparamet": 72, "scenarioweeklyprofileparamet": 73, "scenariowrapperparamet": 74, "storageparamet": 75, "storagethresholdparamet": 76, "tablesarrayparamet": 77, "uniformdrawdownprofileparamet": 78, "weeklyprofileparamet": 79, "control_curv": [80, 81, 82, 83, 84], "basecontrolcurveparamet": 80, "controlcurveindexparamet": 81, "controlcurveinterpolatedparamet": 82, "controlcurveparamet": 83, "controlcurvepiecewiseinterpolatedparamet": 84, "record": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 144], "aggregatedrecord": 85, "aggreg": [86, 135, 136], "annualcountindexparameterrecord": 87, "annualcountindexthresholdrecord": 88, "annualtotalflowrecord": 89, "csvrecord": 90, "deficitfrequencynoderecord": 91, "flowdurationcurvedeviationrecord": 92, "flowdurationcurverecord": 93, "gaussiankdestoragerecord": 94, "hydropowerrecord": 95, "indexparameterrecord": 96, "meanflownoderecord": 97, "meanparameterrecord": 98, "minimumthresholdvolumestoragerecord": 99, "minimumvolumestoragerecord": 100, "noderecord": 101, "normalisedgaussiankdestoragerecord": 102, "numpyarrayarearecord": 103, "numpyarraydailyprofileparameterrecord": 104, "numpyarrayindexparameterrecord": 105, "numpyarraylevelrecord": 106, "numpyarraynodecurtailmentratiorecord": 107, "numpyarraynodedeficitrecord": 108, "numpyarraynoderecord": 109, "numpyarraynodesuppliedratiorecord": 110, "numpyarrayparameterrecord": 111, "numpyarraystoragerecord": 112, "parameterrecord": 113, "rollingmeanflownoderecord": 115, "rollingwindowparameterrecord": 116, "seasonalflowdurationcurverecord": 117, "storagedurationcurverecord": 118, "storagerecord": 119, "tablesrecord": 120, "timestepcountindexparameterrecord": 121, "totaldeficitnoderecord": 122, "totalflownoderecord": 123, "totalhydroenergyrecord": 124, "totalparameterrecord": 125, "refer": 126, "document": [126, 147, 149, 150], "class": [127, 128, 131, 132], "notebook": 129, "util": [129, 134], "optimis": 130, "submodul": [130, 133], "platypu": 130, "pygmo": 130, "modul": [130, 133], "content": [130, 133], "base": [131, 132], "simpl": [131, 143], "combin": 131, "multipl": 131, "annual": 131, "profil": [131, 139], "datafram": 131, "hdf5": 131, "arrai": [131, 132], "threshold": 131, "activ": 131, "function": [131, 136], "interpol": 131, "control": [131, 137], "curv": [131, 132, 137], "hydropow": 131, "other": [131, 137, 143], "numpi": 132, "flow": [132, 135], "durat": 132, "deficit": 132, "statist": 132, "index": [132, 139], "file": 132, "hydro": 132, "power": 132, "solver": [133, 149], "cython_glpk": 133, "cython_lpsolv": 133, "bisect": 134, "search": 134, "constrain": 135, "us": [135, 139], "ratio": 135, "maximum": 135, "valu": 135, "addit": 135, "inform": 135, "basic": [136, 137], "usag": 136, "sum": 136, "min": 136, "max": 136, "product": 136, "mean": 136, "median": 136, "ani": 136, "all": 136, "custom": [136, 137, 142, 143, 144], "dynam": 137, "behaviour": 137, "concept": 137, "depend": [137, 143, 148], "cookbook": 138, "exampl": [138, 139, 151], "extern": 139, "data": 139, "support": 139, "format": [139, 149], "checksum": 139, "timeseri": 139, "timeseries1": 139, "csv": 139, "constant": 139, "demand": [139, 140], "monthli": 139, "demands_monthli": 139, "multi": 139, "multiindex_data": 139, "tabl": 139, "restrict": 140, "glpk": 141, "error": [141, 149], "handl": 141, "perform": [141, 143], "version": 141, "1": 141, "17": 141, "abov": 141, "older": 141, "extend": [142, 143, 144, 145], "A": [143, 151], "track": 143, "state": 143, "setup": 143, "reset": 143, "befor": 143, "after": 143, "improv": 143, "cython": 143, "problem": 146, "formul": 146, "welcom": 147, "": 147, "instal": 148, "gener": 148, "binari": 148, "wheel": 148, "pip": 148, "packag": 148, "anaconda": 148, "from": 148, "sourc": 148, "window": 148, "linux": 148, "ubuntu": 148, "o": 148, "x": 148, "develop": 148, "test": 148, "continu": 148, "integr": 148, "json": 149, "model": 149, "overview": 149, "structur": 149, "metadata": 149, "timestepp": 149, "non": 149, "edg": 149, "load": 149, "debug": 149, "syntax": 149, "footnot": 149, "licens": 150, "softwar": 150, "citat": 150, "tutori": 151, "minim": 151}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"pywr.core.Scenario": [[0, "pywr-core-scenario"]], "pywr.core.ScenarioCollection": [[1, "pywr-core-scenariocollection"]], "pywr.core.ScenarioIndex": [[2, "pywr-core-scenarioindex"]], "pywr.core.Timestep": [[3, "pywr-core-timestep"]], "pywr.domains.river.Catchment": [[4, "pywr-domains-river-catchment"]], "pywr.domains.river.Reservoir": [[5, "pywr-domains-river-reservoir"]], "pywr.domains.river.River": [[6, "pywr-domains-river-river"]], "pywr.domains.river.RiverGauge": [[7, "pywr-domains-river-rivergauge"]], "pywr.domains.river.RiverSplit": [[8, "pywr-domains-river-riversplit"]], "pywr.domains.river.RiverSplitWithGauge": [[9, "pywr-domains-river-riversplitwithgauge"]], "pywr.nodes.AggregatedNode": [[10, "pywr-nodes-aggregatednode"]], "pywr.nodes.AggregatedStorage": [[11, "pywr-nodes-aggregatedstorage"]], "pywr.nodes.AnnualVirtualStorage": [[12, "pywr-nodes-annualvirtualstorage"]], "pywr.nodes.BreakLink": [[13, "pywr-nodes-breaklink"]], "pywr.nodes.DelayNode": [[14, "pywr-nodes-delaynode"]], "pywr.nodes.Input": [[15, "pywr-nodes-input"]], "pywr.nodes.Link": [[16, "pywr-nodes-link"]], "pywr.nodes.LossLink": [[17, "pywr-nodes-losslink"]], "pywr.nodes.MonthlyVirtualStorage": [[18, "pywr-nodes-monthlyvirtualstorage"]], "pywr.nodes.MultiSplitLink": [[19, "pywr-nodes-multisplitlink"]], "pywr.nodes.Node": [[20, "pywr-nodes-node"]], "pywr.nodes.Output": [[21, "pywr-nodes-output"]], "pywr.nodes.PiecewiseLink": [[22, "pywr-nodes-piecewiselink"]], "pywr.nodes.RollingVirtualStorage": [[23, "pywr-nodes-rollingvirtualstorage"]], "pywr.nodes.SeasonalVirtualStorage": [[24, "pywr-nodes-seasonalvirtualstorage"]], "pywr.nodes.Storage": [[25, "pywr-nodes-storage"]], "pywr.nodes.VirtualStorage": [[26, "pywr-nodes-virtualstorage"]], "pywr.parameters.AbstractThresholdParameter": [[27, "pywr-parameters-abstractthresholdparameter"]], "pywr.parameters.AggregatedIndexParameter": [[28, "pywr-parameters-aggregatedindexparameter"]], "pywr.parameters.AggregatedParameter": [[29, "pywr-parameters-aggregatedparameter"]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, "pywr-parameters-annualharmonicseriesparameter"]], "pywr.parameters.ArrayIndexedParameter": [[31, "pywr-parameters-arrayindexedparameter"]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, "pywr-parameters-arrayindexedscenariomonthlyfactorsparameter"]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, "pywr-parameters-arrayindexedscenarioparameter"]], "pywr.parameters.BinaryStepParameter": [[34, "pywr-parameters-binarystepparameter"]], "pywr.parameters.ConstantParameter": [[35, "pywr-parameters-constantparameter"]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, "pywr-parameters-constantscenarioindexparameter"]], "pywr.parameters.ConstantScenarioParameter": [[37, "pywr-parameters-constantscenarioparameter"]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, "pywr-parameters-currentordinaldaythresholdparameter"]], "pywr.parameters.CurrentYearThresholdParameter": [[39, "pywr-parameters-currentyearthresholdparameter"]], "pywr.parameters.DailyProfileParameter": [[40, "pywr-parameters-dailyprofileparameter"]], "pywr.parameters.DataFrameParameter": [[41, "pywr-parameters-dataframeparameter"]], "pywr.parameters.DeficitParameter": [[42, "pywr-parameters-deficitparameter"]], "pywr.parameters.DiscountFactorParameter": [[43, "pywr-parameters-discountfactorparameter"]], "pywr.parameters.DivisionParameter": [[44, "pywr-parameters-divisionparameter"]], "pywr.parameters.FlowDelayParameter": [[45, "pywr-parameters-flowdelayparameter"]], "pywr.parameters.FlowParameter": [[46, "pywr-parameters-flowparameter"]], "pywr.parameters.HydropowerTargetParameter": [[47, "pywr-parameters-hydropowertargetparameter"]], "pywr.parameters.IndexParameter": [[48, "pywr-parameters-indexparameter"]], "pywr.parameters.IndexedArrayParameter": [[49, "pywr-parameters-indexedarrayparameter"]], "pywr.parameters.InterpolatedFlowParameter": [[50, "pywr-parameters-interpolatedflowparameter"]], "pywr.parameters.InterpolatedParameter": [[51, "pywr-parameters-interpolatedparameter"]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, "pywr-parameters-interpolatedquadratureparameter"]], "pywr.parameters.InterpolatedVolumeParameter": [[53, "pywr-parameters-interpolatedvolumeparameter"]], "pywr.parameters.LogisticParameter": [[54, "pywr-parameters-logisticparameter"]], "pywr.parameters.MaxParameter": [[55, "pywr-parameters-maxparameter"]], "pywr.parameters.MinParameter": [[56, "pywr-parameters-minparameter"]], "pywr.parameters.MonthlyProfileParameter": [[57, "pywr-parameters-monthlyprofileparameter"]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, "pywr-parameters-multiplethresholdindexparameter"]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, "pywr-parameters-multiplethresholdparameterindexparameter"]], "pywr.parameters.NegativeMaxParameter": [[60, "pywr-parameters-negativemaxparameter"]], "pywr.parameters.NegativeMinParameter": [[61, "pywr-parameters-negativeminparameter"]], "pywr.parameters.NegativeParameter": [[62, "pywr-parameters-negativeparameter"]], "pywr.parameters.NodeThresholdParameter": [[63, "pywr-parameters-nodethresholdparameter"]], "pywr.parameters.OffsetParameter": [[64, "pywr-parameters-offsetparameter"]], "pywr.parameters.Parameter": [[65, "pywr-parameters-parameter"]], "pywr.parameters.ParameterThresholdParameter": [[66, "pywr-parameters-parameterthresholdparameter"]], "pywr.parameters.PiecewiseIntegralParameter": [[67, "pywr-parameters-piecewiseintegralparameter"]], "pywr.parameters.RbfProfileParameter": [[68, "pywr-parameters-rbfprofileparameter"]], "pywr.parameters.RecorderThresholdParameter": [[69, "pywr-parameters-recorderthresholdparameter"]], "pywr.parameters.RectifierParameter": [[70, "pywr-parameters-rectifierparameter"]], "pywr.parameters.ScenarioDailyProfileParameter": [[71, "pywr-parameters-scenariodailyprofileparameter"]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[72, "pywr-parameters-scenariomonthlyprofileparameter"]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[73, "pywr-parameters-scenarioweeklyprofileparameter"]], "pywr.parameters.ScenarioWrapperParameter": [[74, "pywr-parameters-scenariowrapperparameter"]], "pywr.parameters.StorageParameter": [[75, "pywr-parameters-storageparameter"]], "pywr.parameters.StorageThresholdParameter": [[76, "pywr-parameters-storagethresholdparameter"]], "pywr.parameters.TablesArrayParameter": [[77, "pywr-parameters-tablesarrayparameter"]], "pywr.parameters.UniformDrawdownProfileParameter": [[78, "pywr-parameters-uniformdrawdownprofileparameter"]], "pywr.parameters.WeeklyProfileParameter": [[79, "pywr-parameters-weeklyprofileparameter"]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[80, "pywr-parameters-control-curves-basecontrolcurveparameter"]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[81, "pywr-parameters-control-curves-controlcurveindexparameter"]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[82, "pywr-parameters-control-curves-controlcurveinterpolatedparameter"]], "pywr.parameters.control_curves.ControlCurveParameter": [[83, "pywr-parameters-control-curves-controlcurveparameter"]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[84, "pywr-parameters-control-curves-controlcurvepiecewiseinterpolatedparameter"]], "pywr.recorders.AggregatedRecorder": [[85, "pywr-recorders-aggregatedrecorder"]], "pywr.recorders.Aggregator": [[86, "pywr-recorders-aggregator"]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[87, "pywr-recorders-annualcountindexparameterrecorder"]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[88, "pywr-recorders-annualcountindexthresholdrecorder"]], "pywr.recorders.AnnualTotalFlowRecorder": [[89, "pywr-recorders-annualtotalflowrecorder"]], "pywr.recorders.CSVRecorder": [[90, "pywr-recorders-csvrecorder"]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[91, "pywr-recorders-deficitfrequencynoderecorder"]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[92, "pywr-recorders-flowdurationcurvedeviationrecorder"]], "pywr.recorders.FlowDurationCurveRecorder": [[93, "pywr-recorders-flowdurationcurverecorder"]], "pywr.recorders.GaussianKDEStorageRecorder": [[94, "pywr-recorders-gaussiankdestoragerecorder"]], "pywr.recorders.HydropowerRecorder": [[95, "pywr-recorders-hydropowerrecorder"]], "pywr.recorders.IndexParameterRecorder": [[96, "pywr-recorders-indexparameterrecorder"]], "pywr.recorders.MeanFlowNodeRecorder": [[97, "pywr-recorders-meanflownoderecorder"]], "pywr.recorders.MeanParameterRecorder": [[98, "pywr-recorders-meanparameterrecorder"]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[99, "pywr-recorders-minimumthresholdvolumestoragerecorder"]], "pywr.recorders.MinimumVolumeStorageRecorder": [[100, "pywr-recorders-minimumvolumestoragerecorder"]], "pywr.recorders.NodeRecorder": [[101, "pywr-recorders-noderecorder"]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[102, "pywr-recorders-normalisedgaussiankdestoragerecorder"]], "pywr.recorders.NumpyArrayAreaRecorder": [[103, "pywr-recorders-numpyarrayarearecorder"]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[104, "pywr-recorders-numpyarraydailyprofileparameterrecorder"]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[105, "pywr-recorders-numpyarrayindexparameterrecorder"]], "pywr.recorders.NumpyArrayLevelRecorder": [[106, "pywr-recorders-numpyarraylevelrecorder"]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[107, "pywr-recorders-numpyarraynodecurtailmentratiorecorder"]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[108, "pywr-recorders-numpyarraynodedeficitrecorder"]], "pywr.recorders.NumpyArrayNodeRecorder": [[109, "pywr-recorders-numpyarraynoderecorder"]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[110, "pywr-recorders-numpyarraynodesuppliedratiorecorder"]], "pywr.recorders.NumpyArrayParameterRecorder": [[111, "pywr-recorders-numpyarrayparameterrecorder"]], "pywr.recorders.NumpyArrayStorageRecorder": [[112, "pywr-recorders-numpyarraystoragerecorder"]], "pywr.recorders.ParameterRecorder": [[113, "pywr-recorders-parameterrecorder"]], "pywr.recorders.Recorder": [[114, "pywr-recorders-recorder"]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[115, "pywr-recorders-rollingmeanflownoderecorder"]], "pywr.recorders.RollingWindowParameterRecorder": [[116, "pywr-recorders-rollingwindowparameterrecorder"]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[117, "pywr-recorders-seasonalflowdurationcurverecorder"]], "pywr.recorders.StorageDurationCurveRecorder": [[118, "pywr-recorders-storagedurationcurverecorder"]], "pywr.recorders.StorageRecorder": [[119, "pywr-recorders-storagerecorder"]], "pywr.recorders.TablesRecorder": [[120, "pywr-recorders-tablesrecorder"]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[121, "pywr-recorders-timestepcountindexparameterrecorder"]], "pywr.recorders.TotalDeficitNodeRecorder": [[122, "pywr-recorders-totaldeficitnoderecorder"]], "pywr.recorders.TotalFlowNodeRecorder": [[123, "pywr-recorders-totalflownoderecorder"]], "pywr.recorders.TotalHydroEnergyRecorder": [[124, "pywr-recorders-totalhydroenergyrecorder"]], "pywr.recorders.TotalParameterRecorder": [[125, "pywr-recorders-totalparameterrecorder"]], "Pywr reference documentation.": [[126, "pywr-reference-documentation"]], "Core classes": [[127, "core-classes"]], "Nodes": [[128, "nodes"], [149, "nodes"]], "Nodes classes": [[128, "nodes-classes"]], "Notebook Utilities": [[129, "notebook-utilities"]], "Optimisation": [[130, "optimisation"]], "Submodules": [[130, "submodules"], [133, "submodules"]], "Platypus (pywr.optimisation.platypus)": [[130, "platypus-pywr-optimisation-platypus"]], "Pygmo (pywr.optimisation.pygmo)": [[130, "module-pywr.optimisation.pygmo"]], "Module contents": [[130, "module-pywr.optimisation"], [133, "module-pywr.solvers"]], "Parameters": [[131, "parameters"], [149, "parameters"]], "Base Parameter class": [[131, "base-parameter-class"]], "Simple parameters": [[131, "simple-parameters"]], "Combining multiple parameters": [[131, "combining-multiple-parameters"]], "Annual profile parameters": [[131, "annual-profile-parameters"]], "Dataframe parameter": [[131, "dataframe-parameter"]], "HDF5 Parameter": [[131, "hdf5-parameter"]], "Array based parameters": [[131, "array-based-parameters"]], "Threshold parameters": [[131, "threshold-parameters"]], "Activation function parameters": [[131, "activation-function-parameters"]], "Interpolation parameters": [[131, "interpolation-parameters"]], "Control curve parameters": [[131, "control-curve-parameters"]], "Hydropower parameters": [[131, "hydropower-parameters"]], "Other parameters": [[131, "other-parameters"]], "Recorders": [[132, "recorders"]], "Base Recorder classes": [[132, "base-recorder-classes"]], "Numpy array recorders": [[132, "numpy-array-recorders"]], "Flow duration curve recorders": [[132, "flow-duration-curve-recorders"]], "Deficit recorders": [[132, "deficit-recorders"]], "Statistical recorders": [[132, "statistical-recorders"]], "Index recorders": [[132, "index-recorders"]], "File recorders": [[132, "file-recorders"]], "Hydro-power recorders": [[132, "hydro-power-recorders"]], "Solvers": [[133, "solvers"]], "pywr.solvers.cython_glpk module": [[133, "module-pywr.solvers.cython_glpk"]], "pywr.solvers.cython_lpsolve module": [[133, "pywr-solvers-cython-lpsolve-module"]], "Utilities": [[134, "utilities"]], "Bisection Search (pywr.utils.bisect)": [[134, "module-pywr.utils.bisect"]], "Aggregated nodes": [[135, "aggregated-nodes"]], "Constraining flow using a ratio": [[135, "constraining-flow-using-a-ratio"]], "Constraining flow using a maximum value": [[135, "constraining-flow-using-a-maximum-value"]], "Additional information": [[135, "additional-information"]], "Aggregated parameters": [[136, "aggregated-parameters"]], "Basic usage": [[136, "basic-usage"]], "Sum, Min, Max, Product": [[136, "sum-min-max-product"]], "Mean and Median": [[136, "mean-and-median"]], "Any and All": [[136, "any-and-all"]], "Custom aggregation functions": [[136, "custom-aggregation-functions"]], "MaxParameter, MinParameter and NegativeParameter, NegativeMaxParameter": [[136, "maxparameter-minparameter-and-negativeparameter-negativemaxparameter"]], "Dynamic behaviour and control curves": [[137, "dynamic-behaviour-and-control-curves"]], "Basic concept": [[137, "basic-concept"]], "Storage dependent control curves": [[137, "storage-dependent-control-curves"]], "Other control curves": [[137, "other-control-curves"]], "Custom control curves": [[137, "custom-control-curves"]], "Pywr cookbook examples": [[138, "pywr-cookbook-examples"]], "Using external data": [[139, "using-external-data"]], "Supported formats": [[139, "supported-formats"]], "Checksums": [[139, "checksums"]], "Examples": [[139, "examples"]], "Timeseries": [[139, "timeseries"]], "timeseries1.csv": [[139, "id1"]], "Constants": [[139, "constants"]], "demands.csv": [[139, "id2"]], "Monthly profiles": [[139, "monthly-profiles"]], "demands_monthly.csv": [[139, "id3"]], "Multi-index": [[139, "multi-index"]], "multiindex_data.csv": [[139, "id4"]], "Tables": [[139, "tables"]], "Demand restrictions": [[140, "demand-restrictions"]], "GLPK error handling and performance": [[141, "glpk-error-handling-and-performance"]], "Version 1.17 and above": [[141, "version-1-17-and-above"]], "Older versions": [[141, "older-versions"]], "Extending Pywr with custom Nodes": [[142, "extending-pywr-with-custom-nodes"]], "Extending Pywr with custom Parameters": [[143, "extending-pywr-with-custom-parameters"]], "A simple parameter": [[143, "a-simple-parameter"]], "Timesteps and scenarios": [[143, "timesteps-and-scenarios"]], "Tracking state with setup, reset, before and after": [[143, "tracking-state-with-setup-reset-before-and-after"]], "Dependency on other parameters": [[143, "dependency-on-other-parameters"]], "Improving performance with Cython": [[143, "improving-performance-with-cython"]], "Extending Pywr with custom Recorders": [[144, "extending-pywr-with-custom-recorders"]], "Extending Pywr": [[145, "extending-pywr"]], "Problem formulation": [[146, "problem-formulation"]], "Welcome to Pywr\u2019s documentation!": [[147, "welcome-to-pywr-s-documentation"]], "Installing Pywr": [[148, "installing-pywr"]], "Dependencies": [[148, "dependencies"]], "Installing (in general)": [[148, "installing-in-general"]], "Installing binary wheels with pip": [[148, "installing-binary-wheels-with-pip"]], "Installing binary packages with Anaconda": [[148, "installing-binary-packages-with-anaconda"]], "Installing from source with Anaconda": [[148, "installing-from-source-with-anaconda"]], "Installing on Windows": [[148, "installing-on-windows"]], "Installing on Linux": [[148, "installing-on-linux"]], "Ubuntu": [[148, "ubuntu"]], "Installing on OS X": [[148, "installing-on-os-x"]], "Development and testing": [[148, "development-and-testing"]], "Continuous Integration": [[148, "continuous-integration"]], "JSON model format": [[149, "json-model-format"]], "Overview of document structure": [[149, "overview-of-document-structure"]], "Metadata": [[149, "metadata"]], "Timestepper": [[149, "timestepper"]], "Solver": [[149, "solver"]], "Non-storage nodes": [[149, "non-storage-nodes"]], "Storage nodes": [[149, "storage-nodes"]], "Edges": [[149, "edges"]], "Loading a JSON document": [[149, "loading-a-json-document"]], "Debugging and syntax errors": [[149, "debugging-and-syntax-errors"]], "Footnotes": [[149, "footnotes"]], "License": [[150, "license"]], "Software": [[150, "software"]], "Documentation": [[150, "documentation"]], "Citation": [[150, "citation"]], "Tutorial": [[151, "tutorial"]], "A minimal example": [[151, "a-minimal-example"]]}, "indexentries": {"scenario (class in pywr.core)": [[0, "pywr.core.Scenario"]], "__init__() (pywr.core.scenario method)": [[0, "pywr.core.Scenario.__init__"]], "scenariocollection (class in pywr.core)": [[1, "pywr.core.ScenarioCollection"]], "__init__() (pywr.core.scenariocollection method)": [[1, "pywr.core.ScenarioCollection.__init__"]], "scenarioindex (class in pywr.core)": [[2, "pywr.core.ScenarioIndex"]], "__init__() (pywr.core.scenarioindex method)": [[2, "pywr.core.ScenarioIndex.__init__"]], "timestep (class in pywr.core)": [[3, "pywr.core.Timestep"]], "__init__() (pywr.core.timestep method)": [[3, "pywr.core.Timestep.__init__"]], "catchment (class in pywr.domains.river)": [[4, "pywr.domains.river.Catchment"]], "__init__() (pywr.domains.river.catchment method)": [[4, "pywr.domains.river.Catchment.__init__"]], "reservoir (class in pywr.domains.river)": [[5, "pywr.domains.river.Reservoir"]], "__init__() (pywr.domains.river.reservoir method)": [[5, "pywr.domains.river.Reservoir.__init__"]], "river (class in pywr.domains.river)": [[6, "pywr.domains.river.River"]], "__init__() (pywr.domains.river.river method)": [[6, "pywr.domains.river.River.__init__"]], "rivergauge (class in pywr.domains.river)": [[7, "pywr.domains.river.RiverGauge"]], "__init__() (pywr.domains.river.rivergauge method)": [[7, "pywr.domains.river.RiverGauge.__init__"]], "riversplit (class in pywr.domains.river)": [[8, "pywr.domains.river.RiverSplit"]], "__init__() (pywr.domains.river.riversplit method)": [[8, "pywr.domains.river.RiverSplit.__init__"]], "riversplitwithgauge (class in pywr.domains.river)": [[9, "pywr.domains.river.RiverSplitWithGauge"]], "__init__() (pywr.domains.river.riversplitwithgauge method)": [[9, "pywr.domains.river.RiverSplitWithGauge.__init__"]], "aggregatednode (class in pywr.nodes)": [[10, "pywr.nodes.AggregatedNode"]], "__init__() (pywr.nodes.aggregatednode method)": [[10, "pywr.nodes.AggregatedNode.__init__"]], "aggregatedstorage (class in pywr.nodes)": [[11, "pywr.nodes.AggregatedStorage"]], "__init__() (pywr.nodes.aggregatedstorage method)": [[11, "pywr.nodes.AggregatedStorage.__init__"]], "annualvirtualstorage (class in pywr.nodes)": [[12, "pywr.nodes.AnnualVirtualStorage"]], "__init__() (pywr.nodes.annualvirtualstorage method)": [[12, "pywr.nodes.AnnualVirtualStorage.__init__"]], "breaklink (class in pywr.nodes)": [[13, "pywr.nodes.BreakLink"]], "__init__() (pywr.nodes.breaklink method)": [[13, "pywr.nodes.BreakLink.__init__"]], "delaynode (class in pywr.nodes)": [[14, "pywr.nodes.DelayNode"]], "__init__() (pywr.nodes.delaynode method)": [[14, "pywr.nodes.DelayNode.__init__"]], "input (class in pywr.nodes)": [[15, "pywr.nodes.Input"]], "__init__() (pywr.nodes.input method)": [[15, "pywr.nodes.Input.__init__"]], "link (class in pywr.nodes)": [[16, "pywr.nodes.Link"]], "__init__() (pywr.nodes.link method)": [[16, "pywr.nodes.Link.__init__"]], "losslink (class in pywr.nodes)": [[17, "pywr.nodes.LossLink"]], "__init__() (pywr.nodes.losslink method)": [[17, "pywr.nodes.LossLink.__init__"]], "monthlyvirtualstorage (class in pywr.nodes)": [[18, "pywr.nodes.MonthlyVirtualStorage"]], "__init__() (pywr.nodes.monthlyvirtualstorage method)": [[18, "pywr.nodes.MonthlyVirtualStorage.__init__"]], "multisplitlink (class in pywr.nodes)": [[19, "pywr.nodes.MultiSplitLink"]], "__init__() (pywr.nodes.multisplitlink method)": [[19, "pywr.nodes.MultiSplitLink.__init__"]], "node (class in pywr.nodes)": [[20, "pywr.nodes.Node"]], "__init__() (pywr.nodes.node method)": [[20, "pywr.nodes.Node.__init__"]], "output (class in pywr.nodes)": [[21, "pywr.nodes.Output"]], "__init__() (pywr.nodes.output method)": [[21, "pywr.nodes.Output.__init__"]], "piecewiselink (class in pywr.nodes)": [[22, "pywr.nodes.PiecewiseLink"]], "__init__() (pywr.nodes.piecewiselink method)": [[22, "pywr.nodes.PiecewiseLink.__init__"]], "rollingvirtualstorage (class in pywr.nodes)": [[23, "pywr.nodes.RollingVirtualStorage"]], "__init__() (pywr.nodes.rollingvirtualstorage method)": [[23, "pywr.nodes.RollingVirtualStorage.__init__"]], "seasonalvirtualstorage (class in pywr.nodes)": [[24, "pywr.nodes.SeasonalVirtualStorage"]], "__init__() (pywr.nodes.seasonalvirtualstorage method)": [[24, "pywr.nodes.SeasonalVirtualStorage.__init__"]], "storage (class in pywr.nodes)": [[25, "pywr.nodes.Storage"]], "__init__() (pywr.nodes.storage method)": [[25, "pywr.nodes.Storage.__init__"]], "virtualstorage (class in pywr.nodes)": [[26, "pywr.nodes.VirtualStorage"]], "__init__() (pywr.nodes.virtualstorage method)": [[26, "pywr.nodes.VirtualStorage.__init__"]], "abstractthresholdparameter (class in pywr.parameters)": [[27, "pywr.parameters.AbstractThresholdParameter"]], "__init__() (pywr.parameters.abstractthresholdparameter method)": [[27, "pywr.parameters.AbstractThresholdParameter.__init__"]], "aggregatedindexparameter (class in pywr.parameters)": [[28, "pywr.parameters.AggregatedIndexParameter"]], "__init__() (pywr.parameters.aggregatedindexparameter method)": [[28, "pywr.parameters.AggregatedIndexParameter.__init__"]], "aggregatedparameter (class in pywr.parameters)": [[29, "pywr.parameters.AggregatedParameter"]], "__init__() (pywr.parameters.aggregatedparameter method)": [[29, "pywr.parameters.AggregatedParameter.__init__"]], "annualharmonicseriesparameter (class in pywr.parameters)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter"]], "__init__() (pywr.parameters.annualharmonicseriesparameter method)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter.__init__"]], "arrayindexedparameter (class in pywr.parameters)": [[31, "pywr.parameters.ArrayIndexedParameter"]], "__init__() (pywr.parameters.arrayindexedparameter method)": [[31, "pywr.parameters.ArrayIndexedParameter.__init__"]], "arrayindexedscenariomonthlyfactorsparameter (class in pywr.parameters)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter"]], "__init__() (pywr.parameters.arrayindexedscenariomonthlyfactorsparameter method)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.__init__"]], "arrayindexedscenarioparameter (class in pywr.parameters)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter"]], "__init__() (pywr.parameters.arrayindexedscenarioparameter method)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter.__init__"]], "binarystepparameter (class in pywr.parameters)": [[34, "pywr.parameters.BinaryStepParameter"]], "__init__() (pywr.parameters.binarystepparameter method)": [[34, "pywr.parameters.BinaryStepParameter.__init__"]], "constantparameter (class in pywr.parameters)": [[35, "pywr.parameters.ConstantParameter"]], "__init__() (pywr.parameters.constantparameter method)": [[35, "pywr.parameters.ConstantParameter.__init__"]], "constantscenarioindexparameter (class in pywr.parameters)": [[36, "pywr.parameters.ConstantScenarioIndexParameter"]], "__init__() (pywr.parameters.constantscenarioindexparameter method)": [[36, "pywr.parameters.ConstantScenarioIndexParameter.__init__"]], "constantscenarioparameter (class in pywr.parameters)": [[37, "pywr.parameters.ConstantScenarioParameter"]], "__init__() (pywr.parameters.constantscenarioparameter method)": [[37, "pywr.parameters.ConstantScenarioParameter.__init__"]], "currentordinaldaythresholdparameter (class in pywr.parameters)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter"]], "__init__() (pywr.parameters.currentordinaldaythresholdparameter method)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter.__init__"]], "currentyearthresholdparameter (class in pywr.parameters)": [[39, "pywr.parameters.CurrentYearThresholdParameter"]], "__init__() (pywr.parameters.currentyearthresholdparameter method)": [[39, "pywr.parameters.CurrentYearThresholdParameter.__init__"]], "dailyprofileparameter (class in pywr.parameters)": [[40, "pywr.parameters.DailyProfileParameter"]], "__init__() (pywr.parameters.dailyprofileparameter method)": [[40, "pywr.parameters.DailyProfileParameter.__init__"]], "dataframeparameter (class in pywr.parameters)": [[41, "pywr.parameters.DataFrameParameter"]], "__init__() (pywr.parameters.dataframeparameter method)": [[41, "pywr.parameters.DataFrameParameter.__init__"]], "deficitparameter (class in pywr.parameters)": [[42, "pywr.parameters.DeficitParameter"]], "__init__() (pywr.parameters.deficitparameter method)": [[42, "pywr.parameters.DeficitParameter.__init__"]], "discountfactorparameter (class in pywr.parameters)": [[43, "pywr.parameters.DiscountFactorParameter"]], "__init__() (pywr.parameters.discountfactorparameter method)": [[43, "pywr.parameters.DiscountFactorParameter.__init__"]], "divisionparameter (class in pywr.parameters)": [[44, "pywr.parameters.DivisionParameter"]], "__init__() (pywr.parameters.divisionparameter method)": [[44, "pywr.parameters.DivisionParameter.__init__"]], "flowdelayparameter (class in pywr.parameters)": [[45, "pywr.parameters.FlowDelayParameter"]], "__init__() (pywr.parameters.flowdelayparameter method)": [[45, "pywr.parameters.FlowDelayParameter.__init__"]], "flowparameter (class in pywr.parameters)": [[46, "pywr.parameters.FlowParameter"]], "__init__() (pywr.parameters.flowparameter method)": [[46, "pywr.parameters.FlowParameter.__init__"]], "hydropowertargetparameter (class in pywr.parameters)": [[47, "pywr.parameters.HydropowerTargetParameter"]], "__init__() (pywr.parameters.hydropowertargetparameter method)": [[47, "pywr.parameters.HydropowerTargetParameter.__init__"]], "indexparameter (class in pywr.parameters)": [[48, "pywr.parameters.IndexParameter"]], "__init__() (pywr.parameters.indexparameter method)": [[48, "pywr.parameters.IndexParameter.__init__"]], "indexedarrayparameter (class in pywr.parameters)": [[49, "pywr.parameters.IndexedArrayParameter"]], "__init__() (pywr.parameters.indexedarrayparameter method)": [[49, "pywr.parameters.IndexedArrayParameter.__init__"]], "interpolatedflowparameter (class in pywr.parameters)": [[50, "pywr.parameters.InterpolatedFlowParameter"]], "__init__() (pywr.parameters.interpolatedflowparameter method)": [[50, "pywr.parameters.InterpolatedFlowParameter.__init__"]], "interpolatedparameter (class in pywr.parameters)": [[51, "pywr.parameters.InterpolatedParameter"]], "__init__() (pywr.parameters.interpolatedparameter method)": [[51, "pywr.parameters.InterpolatedParameter.__init__"]], "interpolatedquadratureparameter (class in pywr.parameters)": [[52, "pywr.parameters.InterpolatedQuadratureParameter"]], "__init__() (pywr.parameters.interpolatedquadratureparameter method)": [[52, "pywr.parameters.InterpolatedQuadratureParameter.__init__"]], "interpolatedvolumeparameter (class in pywr.parameters)": [[53, "pywr.parameters.InterpolatedVolumeParameter"]], "__init__() (pywr.parameters.interpolatedvolumeparameter method)": [[53, "pywr.parameters.InterpolatedVolumeParameter.__init__"]], "logisticparameter (class in pywr.parameters)": [[54, "pywr.parameters.LogisticParameter"]], "__init__() (pywr.parameters.logisticparameter method)": [[54, "pywr.parameters.LogisticParameter.__init__"]], "maxparameter (class in pywr.parameters)": [[55, "pywr.parameters.MaxParameter"]], "__init__() (pywr.parameters.maxparameter method)": [[55, "pywr.parameters.MaxParameter.__init__"]], "minparameter (class in pywr.parameters)": [[56, "pywr.parameters.MinParameter"]], "__init__() (pywr.parameters.minparameter method)": [[56, "pywr.parameters.MinParameter.__init__"]], "monthlyprofileparameter (class in pywr.parameters)": [[57, "pywr.parameters.MonthlyProfileParameter"]], "__init__() (pywr.parameters.monthlyprofileparameter method)": [[57, "pywr.parameters.MonthlyProfileParameter.__init__"]], "multiplethresholdindexparameter (class in pywr.parameters)": [[58, "pywr.parameters.MultipleThresholdIndexParameter"]], "__init__() (pywr.parameters.multiplethresholdindexparameter method)": [[58, "pywr.parameters.MultipleThresholdIndexParameter.__init__"]], "multiplethresholdparameterindexparameter (class in pywr.parameters)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter"]], "__init__() (pywr.parameters.multiplethresholdparameterindexparameter method)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter.__init__"]], "negativemaxparameter (class in pywr.parameters)": [[60, "pywr.parameters.NegativeMaxParameter"]], "__init__() (pywr.parameters.negativemaxparameter method)": [[60, "pywr.parameters.NegativeMaxParameter.__init__"]], "negativeminparameter (class in pywr.parameters)": [[61, "pywr.parameters.NegativeMinParameter"]], "__init__() (pywr.parameters.negativeminparameter method)": [[61, "pywr.parameters.NegativeMinParameter.__init__"]], "negativeparameter (class in pywr.parameters)": [[62, "pywr.parameters.NegativeParameter"]], "__init__() (pywr.parameters.negativeparameter method)": [[62, "pywr.parameters.NegativeParameter.__init__"]], "nodethresholdparameter (class in pywr.parameters)": [[63, "pywr.parameters.NodeThresholdParameter"]], "__init__() (pywr.parameters.nodethresholdparameter method)": [[63, "pywr.parameters.NodeThresholdParameter.__init__"]], "offsetparameter (class in pywr.parameters)": [[64, "pywr.parameters.OffsetParameter"]], "__init__() (pywr.parameters.offsetparameter method)": [[64, "pywr.parameters.OffsetParameter.__init__"]], "parameter (class in pywr.parameters)": [[65, "pywr.parameters.Parameter"]], "__init__() (pywr.parameters.parameter method)": [[65, "pywr.parameters.Parameter.__init__"]], "parameterthresholdparameter (class in pywr.parameters)": [[66, "pywr.parameters.ParameterThresholdParameter"]], "__init__() (pywr.parameters.parameterthresholdparameter method)": [[66, "pywr.parameters.ParameterThresholdParameter.__init__"]], "piecewiseintegralparameter (class in pywr.parameters)": [[67, "pywr.parameters.PiecewiseIntegralParameter"]], "__init__() (pywr.parameters.piecewiseintegralparameter method)": [[67, "pywr.parameters.PiecewiseIntegralParameter.__init__"]], "rbfprofileparameter (class in pywr.parameters)": [[68, "pywr.parameters.RbfProfileParameter"]], "__init__() (pywr.parameters.rbfprofileparameter method)": [[68, "pywr.parameters.RbfProfileParameter.__init__"]], "recorderthresholdparameter (class in pywr.parameters)": [[69, "pywr.parameters.RecorderThresholdParameter"]], "__init__() (pywr.parameters.recorderthresholdparameter method)": [[69, "pywr.parameters.RecorderThresholdParameter.__init__"]], "rectifierparameter (class in pywr.parameters)": [[70, "pywr.parameters.RectifierParameter"]], "__init__() (pywr.parameters.rectifierparameter method)": [[70, "pywr.parameters.RectifierParameter.__init__"]], "scenariodailyprofileparameter (class in pywr.parameters)": [[71, "pywr.parameters.ScenarioDailyProfileParameter"]], "__init__() (pywr.parameters.scenariodailyprofileparameter method)": [[71, "pywr.parameters.ScenarioDailyProfileParameter.__init__"]], "scenariomonthlyprofileparameter (class in pywr.parameters)": [[72, "pywr.parameters.ScenarioMonthlyProfileParameter"]], "__init__() (pywr.parameters.scenariomonthlyprofileparameter method)": [[72, "pywr.parameters.ScenarioMonthlyProfileParameter.__init__"]], "scenarioweeklyprofileparameter (class in pywr.parameters)": [[73, "pywr.parameters.ScenarioWeeklyProfileParameter"]], "__init__() (pywr.parameters.scenarioweeklyprofileparameter method)": [[73, "pywr.parameters.ScenarioWeeklyProfileParameter.__init__"]], "scenariowrapperparameter (class in pywr.parameters)": [[74, "pywr.parameters.ScenarioWrapperParameter"]], "__init__() (pywr.parameters.scenariowrapperparameter method)": [[74, "pywr.parameters.ScenarioWrapperParameter.__init__"]], "storageparameter (class in pywr.parameters)": [[75, "pywr.parameters.StorageParameter"]], "__init__() (pywr.parameters.storageparameter method)": [[75, "pywr.parameters.StorageParameter.__init__"]], "storagethresholdparameter (class in pywr.parameters)": [[76, "pywr.parameters.StorageThresholdParameter"]], "__init__() (pywr.parameters.storagethresholdparameter method)": [[76, "pywr.parameters.StorageThresholdParameter.__init__"]], "tablesarrayparameter (class in pywr.parameters)": [[77, "pywr.parameters.TablesArrayParameter"]], "__init__() (pywr.parameters.tablesarrayparameter method)": [[77, "pywr.parameters.TablesArrayParameter.__init__"]], "uniformdrawdownprofileparameter (class in pywr.parameters)": [[78, "pywr.parameters.UniformDrawdownProfileParameter"]], "__init__() (pywr.parameters.uniformdrawdownprofileparameter method)": [[78, "pywr.parameters.UniformDrawdownProfileParameter.__init__"]], "weeklyprofileparameter (class in pywr.parameters)": [[79, "pywr.parameters.WeeklyProfileParameter"]], "__init__() (pywr.parameters.weeklyprofileparameter method)": [[79, "pywr.parameters.WeeklyProfileParameter.__init__"]], "basecontrolcurveparameter (class in pywr.parameters.control_curves)": [[80, "pywr.parameters.control_curves.BaseControlCurveParameter"]], "__init__() (pywr.parameters.control_curves.basecontrolcurveparameter method)": [[80, "pywr.parameters.control_curves.BaseControlCurveParameter.__init__"]], "controlcurveindexparameter (class in pywr.parameters.control_curves)": [[81, "pywr.parameters.control_curves.ControlCurveIndexParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveindexparameter method)": [[81, "pywr.parameters.control_curves.ControlCurveIndexParameter.__init__"]], "controlcurveinterpolatedparameter (class in pywr.parameters.control_curves)": [[82, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveinterpolatedparameter method)": [[82, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter.__init__"]], "controlcurveparameter (class in pywr.parameters.control_curves)": [[83, "pywr.parameters.control_curves.ControlCurveParameter"]], "__init__() (pywr.parameters.control_curves.controlcurveparameter method)": [[83, "pywr.parameters.control_curves.ControlCurveParameter.__init__"]], "controlcurvepiecewiseinterpolatedparameter (class in pywr.parameters.control_curves)": [[84, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter"]], "__init__() (pywr.parameters.control_curves.controlcurvepiecewiseinterpolatedparameter method)": [[84, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.__init__"]], "aggregatedrecorder (class in pywr.recorders)": [[85, "pywr.recorders.AggregatedRecorder"]], "__init__() (pywr.recorders.aggregatedrecorder method)": [[85, "pywr.recorders.AggregatedRecorder.__init__"]], "aggregator (class in pywr.recorders)": [[86, "pywr.recorders.Aggregator"]], "__init__() (pywr.recorders.aggregator method)": [[86, "pywr.recorders.Aggregator.__init__"]], "annualcountindexparameterrecorder (class in pywr.recorders)": [[87, "pywr.recorders.AnnualCountIndexParameterRecorder"]], "__init__() (pywr.recorders.annualcountindexparameterrecorder method)": [[87, "pywr.recorders.AnnualCountIndexParameterRecorder.__init__"]], "annualcountindexthresholdrecorder (class in pywr.recorders)": [[88, "pywr.recorders.AnnualCountIndexThresholdRecorder"]], "__init__() (pywr.recorders.annualcountindexthresholdrecorder method)": [[88, "pywr.recorders.AnnualCountIndexThresholdRecorder.__init__"]], "annualtotalflowrecorder (class in pywr.recorders)": [[89, "pywr.recorders.AnnualTotalFlowRecorder"]], "__init__() (pywr.recorders.annualtotalflowrecorder method)": [[89, "pywr.recorders.AnnualTotalFlowRecorder.__init__"]], "csvrecorder (class in pywr.recorders)": [[90, "pywr.recorders.CSVRecorder"]], "__init__() (pywr.recorders.csvrecorder method)": [[90, "pywr.recorders.CSVRecorder.__init__"]], "deficitfrequencynoderecorder (class in pywr.recorders)": [[91, "pywr.recorders.DeficitFrequencyNodeRecorder"]], "__init__() (pywr.recorders.deficitfrequencynoderecorder method)": [[91, "pywr.recorders.DeficitFrequencyNodeRecorder.__init__"]], "flowdurationcurvedeviationrecorder (class in pywr.recorders)": [[92, "pywr.recorders.FlowDurationCurveDeviationRecorder"]], "__init__() (pywr.recorders.flowdurationcurvedeviationrecorder method)": [[92, "pywr.recorders.FlowDurationCurveDeviationRecorder.__init__"]], "flowdurationcurverecorder (class in pywr.recorders)": [[93, "pywr.recorders.FlowDurationCurveRecorder"]], "__init__() (pywr.recorders.flowdurationcurverecorder method)": [[93, "pywr.recorders.FlowDurationCurveRecorder.__init__"]], "gaussiankdestoragerecorder (class in pywr.recorders)": [[94, "pywr.recorders.GaussianKDEStorageRecorder"]], "__init__() (pywr.recorders.gaussiankdestoragerecorder method)": [[94, "pywr.recorders.GaussianKDEStorageRecorder.__init__"]], "hydropowerrecorder (class in pywr.recorders)": [[95, "pywr.recorders.HydropowerRecorder"]], "__init__() (pywr.recorders.hydropowerrecorder method)": [[95, "pywr.recorders.HydropowerRecorder.__init__"]], "indexparameterrecorder (class in pywr.recorders)": [[96, "pywr.recorders.IndexParameterRecorder"]], "__init__() (pywr.recorders.indexparameterrecorder method)": [[96, "pywr.recorders.IndexParameterRecorder.__init__"]], "meanflownoderecorder (class in pywr.recorders)": [[97, "pywr.recorders.MeanFlowNodeRecorder"]], "__init__() (pywr.recorders.meanflownoderecorder method)": [[97, "pywr.recorders.MeanFlowNodeRecorder.__init__"]], "meanparameterrecorder (class in pywr.recorders)": [[98, "pywr.recorders.MeanParameterRecorder"]], "__init__() (pywr.recorders.meanparameterrecorder method)": [[98, "pywr.recorders.MeanParameterRecorder.__init__"]], "minimumthresholdvolumestoragerecorder (class in pywr.recorders)": [[99, "pywr.recorders.MinimumThresholdVolumeStorageRecorder"]], "__init__() (pywr.recorders.minimumthresholdvolumestoragerecorder method)": [[99, "pywr.recorders.MinimumThresholdVolumeStorageRecorder.__init__"]], "minimumvolumestoragerecorder (class in pywr.recorders)": [[100, "pywr.recorders.MinimumVolumeStorageRecorder"]], "__init__() (pywr.recorders.minimumvolumestoragerecorder method)": [[100, "pywr.recorders.MinimumVolumeStorageRecorder.__init__"]], "noderecorder (class in pywr.recorders)": [[101, "pywr.recorders.NodeRecorder"]], "__init__() (pywr.recorders.noderecorder method)": [[101, "pywr.recorders.NodeRecorder.__init__"]], "normalisedgaussiankdestoragerecorder (class in pywr.recorders)": [[102, "pywr.recorders.NormalisedGaussianKDEStorageRecorder"]], "__init__() (pywr.recorders.normalisedgaussiankdestoragerecorder method)": [[102, "pywr.recorders.NormalisedGaussianKDEStorageRecorder.__init__"]], "numpyarrayarearecorder (class in pywr.recorders)": [[103, "pywr.recorders.NumpyArrayAreaRecorder"]], "__init__() (pywr.recorders.numpyarrayarearecorder method)": [[103, "pywr.recorders.NumpyArrayAreaRecorder.__init__"]], "numpyarraydailyprofileparameterrecorder (class in pywr.recorders)": [[104, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder"]], "__init__() (pywr.recorders.numpyarraydailyprofileparameterrecorder method)": [[104, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder.__init__"]], "numpyarrayindexparameterrecorder (class in pywr.recorders)": [[105, "pywr.recorders.NumpyArrayIndexParameterRecorder"]], "__init__() (pywr.recorders.numpyarrayindexparameterrecorder method)": [[105, "pywr.recorders.NumpyArrayIndexParameterRecorder.__init__"]], "numpyarraylevelrecorder (class in pywr.recorders)": [[106, "pywr.recorders.NumpyArrayLevelRecorder"]], "__init__() (pywr.recorders.numpyarraylevelrecorder method)": [[106, "pywr.recorders.NumpyArrayLevelRecorder.__init__"]], "numpyarraynodecurtailmentratiorecorder (class in pywr.recorders)": [[107, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder"]], "__init__() (pywr.recorders.numpyarraynodecurtailmentratiorecorder method)": [[107, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.__init__"]], "numpyarraynodedeficitrecorder (class in pywr.recorders)": [[108, "pywr.recorders.NumpyArrayNodeDeficitRecorder"]], "__init__() (pywr.recorders.numpyarraynodedeficitrecorder method)": [[108, "pywr.recorders.NumpyArrayNodeDeficitRecorder.__init__"]], "numpyarraynoderecorder (class in pywr.recorders)": [[109, "pywr.recorders.NumpyArrayNodeRecorder"]], "__init__() (pywr.recorders.numpyarraynoderecorder method)": [[109, "pywr.recorders.NumpyArrayNodeRecorder.__init__"]], "numpyarraynodesuppliedratiorecorder (class in pywr.recorders)": [[110, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder"]], "__init__() (pywr.recorders.numpyarraynodesuppliedratiorecorder method)": [[110, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.__init__"]], "numpyarrayparameterrecorder (class in pywr.recorders)": [[111, "pywr.recorders.NumpyArrayParameterRecorder"]], "__init__() (pywr.recorders.numpyarrayparameterrecorder method)": [[111, "pywr.recorders.NumpyArrayParameterRecorder.__init__"]], "numpyarraystoragerecorder (class in pywr.recorders)": [[112, "pywr.recorders.NumpyArrayStorageRecorder"]], "__init__() (pywr.recorders.numpyarraystoragerecorder method)": [[112, "pywr.recorders.NumpyArrayStorageRecorder.__init__"]], "parameterrecorder (class in pywr.recorders)": [[113, "pywr.recorders.ParameterRecorder"]], "__init__() (pywr.recorders.parameterrecorder method)": [[113, "pywr.recorders.ParameterRecorder.__init__"]], "recorder (class in pywr.recorders)": [[114, "pywr.recorders.Recorder"]], "__init__() (pywr.recorders.recorder method)": [[114, "pywr.recorders.Recorder.__init__"]], "rollingmeanflownoderecorder (class in pywr.recorders)": [[115, "pywr.recorders.RollingMeanFlowNodeRecorder"]], "__init__() (pywr.recorders.rollingmeanflownoderecorder method)": [[115, "pywr.recorders.RollingMeanFlowNodeRecorder.__init__"]], "rollingwindowparameterrecorder (class in pywr.recorders)": [[116, "pywr.recorders.RollingWindowParameterRecorder"]], "__init__() (pywr.recorders.rollingwindowparameterrecorder method)": [[116, "pywr.recorders.RollingWindowParameterRecorder.__init__"]], "seasonalflowdurationcurverecorder (class in pywr.recorders)": [[117, "pywr.recorders.SeasonalFlowDurationCurveRecorder"]], "__init__() (pywr.recorders.seasonalflowdurationcurverecorder method)": [[117, "pywr.recorders.SeasonalFlowDurationCurveRecorder.__init__"]], "storagedurationcurverecorder (class in pywr.recorders)": [[118, "pywr.recorders.StorageDurationCurveRecorder"]], "__init__() (pywr.recorders.storagedurationcurverecorder method)": [[118, "pywr.recorders.StorageDurationCurveRecorder.__init__"]], "storagerecorder (class in pywr.recorders)": [[119, "pywr.recorders.StorageRecorder"]], "__init__() (pywr.recorders.storagerecorder method)": [[119, "pywr.recorders.StorageRecorder.__init__"]], "tablesrecorder (class in pywr.recorders)": [[120, "pywr.recorders.TablesRecorder"]], "__init__() (pywr.recorders.tablesrecorder method)": [[120, "pywr.recorders.TablesRecorder.__init__"]], "timestepcountindexparameterrecorder (class in pywr.recorders)": [[121, "pywr.recorders.TimestepCountIndexParameterRecorder"]], "__init__() (pywr.recorders.timestepcountindexparameterrecorder method)": [[121, "pywr.recorders.TimestepCountIndexParameterRecorder.__init__"]], "totaldeficitnoderecorder (class in pywr.recorders)": [[122, "pywr.recorders.TotalDeficitNodeRecorder"]], "__init__() (pywr.recorders.totaldeficitnoderecorder method)": [[122, "pywr.recorders.TotalDeficitNodeRecorder.__init__"]], "totalflownoderecorder (class in pywr.recorders)": [[123, "pywr.recorders.TotalFlowNodeRecorder"]], "__init__() (pywr.recorders.totalflownoderecorder method)": [[123, "pywr.recorders.TotalFlowNodeRecorder.__init__"]], "totalhydroenergyrecorder (class in pywr.recorders)": [[124, "pywr.recorders.TotalHydroEnergyRecorder"]], "__init__() (pywr.recorders.totalhydroenergyrecorder method)": [[124, "pywr.recorders.TotalHydroEnergyRecorder.__init__"]], "totalparameterrecorder (class in pywr.recorders)": [[125, "pywr.recorders.TotalParameterRecorder"]], "__init__() (pywr.recorders.totalparameterrecorder method)": [[125, "pywr.recorders.TotalParameterRecorder.__init__"]], "baseoptimisationwrapper (class in pywr.optimisation)": [[130, "pywr.optimisation.BaseOptimisationWrapper"]], "modelcache (class in pywr.optimisation)": [[130, "pywr.optimisation.ModelCache"]], "pygmowrapper (class in pywr.optimisation.pygmo)": [[130, "pywr.optimisation.pygmo.PygmoWrapper"]], "cache_constraints() (in module pywr.optimisation)": [[130, "pywr.optimisation.cache_constraints"]], "cache_objectives() (in module pywr.optimisation)": [[130, "pywr.optimisation.cache_objectives"]], "cache_variable_parameters() (in module pywr.optimisation)": [[130, "pywr.optimisation.cache_variable_parameters"]], "clear_global_model_cache() (in module pywr.optimisation)": [[130, "pywr.optimisation.clear_global_model_cache"]], "customise_model() (pywr.optimisation.baseoptimisationwrapper method)": [[130, "pywr.optimisation.BaseOptimisationWrapper.customise_model"]], "fitness() (pywr.optimisation.pygmo.pygmowrapper method)": [[130, "pywr.optimisation.pygmo.PygmoWrapper.fitness"]], "get_bounds() (pywr.optimisation.pygmo.pygmowrapper method)": [[130, "pywr.optimisation.pygmo.PygmoWrapper.get_bounds"]], "get_nec() (pywr.optimisation.pygmo.pygmowrapper method)": [[130, "pywr.optimisation.pygmo.PygmoWrapper.get_nec"]], "get_nic() (pywr.optimisation.pygmo.pygmowrapper method)": [[130, "pywr.optimisation.pygmo.PygmoWrapper.get_nic"]], "get_nobj() (pywr.optimisation.pygmo.pygmowrapper method)": [[130, "pywr.optimisation.pygmo.PygmoWrapper.get_nobj"]], "make_model() (pywr.optimisation.baseoptimisationwrapper method)": [[130, "pywr.optimisation.BaseOptimisationWrapper.make_model"]], "model (pywr.optimisation.baseoptimisationwrapper property)": [[130, "pywr.optimisation.BaseOptimisationWrapper.model"]], "model_constraints (pywr.optimisation.baseoptimisationwrapper property)": [[130, "pywr.optimisation.BaseOptimisationWrapper.model_constraints"]], "model_objectives (pywr.optimisation.baseoptimisationwrapper property)": [[130, "pywr.optimisation.BaseOptimisationWrapper.model_objectives"]], "model_variable_map (pywr.optimisation.baseoptimisationwrapper property)": [[130, "pywr.optimisation.BaseOptimisationWrapper.model_variable_map"]], "model_variables (pywr.optimisation.baseoptimisationwrapper property)": [[130, "pywr.optimisation.BaseOptimisationWrapper.model_variables"]], "module": [[130, "module-pywr.optimisation"], [130, "module-pywr.optimisation.pygmo"], [133, "module-pywr.solvers"], [133, "module-pywr.solvers.cython_glpk"], [134, "module-pywr.utils.bisect"]], "pywr.optimisation": [[130, "module-pywr.optimisation"]], "pywr.optimisation.pygmo": [[130, "module-pywr.optimisation.pygmo"]], "abstractnodedata (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData"]], "aggnodefactordata (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData"]], "basismanager (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.BasisManager"]], "cythonglpkedgesolver (class in pywr.solvers)": [[133, "pywr.solvers.CythonGLPKEdgeSolver"]], "cythonglpkedgesolver (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver"]], "cythonglpksolver (class in pywr.solvers)": [[133, "pywr.solvers.CythonGLPKSolver"]], "cythonglpksolver (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver"]], "glpkerror": [[133, "pywr.solvers.cython_glpk.GLPKError"]], "glpkinternalerror": [[133, "pywr.solvers.cython_glpk.GLPKInternalError"]], "glpksolver (class in pywr.solvers.cython_glpk)": [[133, "pywr.solvers.cython_glpk.GLPKSolver"]], "nullsolver (class in pywr.solvers)": [[133, "pywr.solvers.NullSolver"]], "solver (class in pywr.solvers)": [[133, "pywr.solvers.Solver"]], "dump_glpk() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.dump_glpk"]], "dump_glpk() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.dump_glpk"]], "dump_glpk() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.dump_glpk"]], "dump_lp() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.dump_lp"]], "dump_lp() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.dump_lp"]], "dump_lp() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.dump_lp"]], "dump_mps() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.dump_mps"]], "dump_mps() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.dump_mps"]], "dump_mps() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.dump_mps"]], "id (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData.id"]], "in_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData.in_edges"]], "ind_ptr (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData.ind_ptr"]], "inds (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData.inds"]], "is_link (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData.is_link"]], "name (pywr.solvers.cythonglpkedgesolver attribute)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.name"]], "name (pywr.solvers.cythonglpksolver attribute)": [[133, "pywr.solvers.CythonGLPKSolver.name"]], "name (pywr.solvers.nullsolver attribute)": [[133, "pywr.solvers.NullSolver.name"]], "name (pywr.solvers.solver attribute)": [[133, "pywr.solvers.Solver.name"]], "node_ind (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData.node_ind"]], "out_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData.out_edges"]], "pywr.solvers": [[133, "module-pywr.solvers"]], "pywr.solvers.cython_glpk": [[133, "module-pywr.solvers.cython_glpk"]], "reset() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.reset"]], "reset() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.reset"]], "reset() (pywr.solvers.nullsolver method)": [[133, "pywr.solvers.NullSolver.reset"]], "reset() (pywr.solvers.solver method)": [[133, "pywr.solvers.Solver.reset"]], "reset() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.reset"]], "reset() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.reset"]], "reset() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.reset"]], "retry_solve (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.retry_solve"]], "retry_solve (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.retry_solve"]], "retry_solve (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.retry_solve"]], "retry_solve (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.retry_solve"]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.route_flows_arr"]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.route_flows_arr"]], "routes (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.routes"]], "routes (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.routes"]], "routes_flows_array (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.routes_flows_array"]], "row (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[133, "pywr.solvers.cython_glpk.AbstractNodeData.row"]], "row (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData.row"]], "save_routes_flows (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.save_routes_flows"]], "save_routes_flows (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.save_routes_flows"]], "set_fixed_costs_once (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_costs_once"]], "set_fixed_costs_once (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.set_fixed_costs_once"]], "set_fixed_costs_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_costs_once"]], "set_fixed_factors_once (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_factors_once"]], "set_fixed_factors_once (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.set_fixed_factors_once"]], "set_fixed_factors_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_factors_once"]], "set_fixed_flows_once (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_flows_once"]], "set_fixed_flows_once (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.set_fixed_flows_once"]], "set_fixed_flows_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_flows_once"]], "set_solver_options() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.set_solver_options"]], "settings (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.settings"]], "settings (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.settings"]], "settings (pywr.solvers.solver property)": [[133, "pywr.solvers.Solver.settings"]], "setup() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.setup"]], "setup() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.setup"]], "setup() (pywr.solvers.nullsolver method)": [[133, "pywr.solvers.NullSolver.setup"]], "setup() (pywr.solvers.solver method)": [[133, "pywr.solvers.Solver.setup"]], "setup() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.setup"]], "setup() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.setup"]], "setup() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.setup"]], "solve() (pywr.solvers.cythonglpkedgesolver method)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.solve"]], "solve() (pywr.solvers.cythonglpksolver method)": [[133, "pywr.solvers.CythonGLPKSolver.solve"]], "solve() (pywr.solvers.nullsolver method)": [[133, "pywr.solvers.NullSolver.solve"]], "solve() (pywr.solvers.solver method)": [[133, "pywr.solvers.Solver.solve"]], "solve() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.solve"]], "solve() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.solve"]], "solve() (pywr.solvers.cython_glpk.glpksolver method)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.solve"]], "stats (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.stats"]], "stats (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.stats"]], "stats (pywr.solvers.solver property)": [[133, "pywr.solvers.Solver.stats"]], "stats (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.stats"]], "stats (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[133, "pywr.solvers.cython_glpk.CythonGLPKSolver.stats"]], "use_presolve (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.use_presolve"]], "use_presolve (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.use_presolve"]], "use_presolve (pywr.solvers.cython_glpk.glpksolver attribute)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.use_presolve"]], "use_unsafe_api (pywr.solvers.cythonglpkedgesolver property)": [[133, "pywr.solvers.CythonGLPKEdgeSolver.use_unsafe_api"]], "use_unsafe_api (pywr.solvers.cythonglpksolver property)": [[133, "pywr.solvers.CythonGLPKSolver.use_unsafe_api"]], "use_unsafe_api (pywr.solvers.cython_glpk.glpksolver attribute)": [[133, "pywr.solvers.cython_glpk.GLPKSolver.use_unsafe_api"]], "vals (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[133, "pywr.solvers.cython_glpk.AggNodeFactorData.vals"]], "bisectionsearchmodel (class in pywr.utils.bisect)": [[134, "pywr.utils.bisect.BisectionSearchModel"]], "pywr.utils.bisect": [[134, "module-pywr.utils.bisect"]], "run() (pywr.utils.bisect.bisectionsearchmodel method)": [[134, "pywr.utils.bisect.BisectionSearchModel.run"]]}})